{"version":3,"sources":["components/friendshipButton/friendshipButton.js","components/users/userCard.js","components/users/receivedRequests.js","components/users/unrequestedUsers.js","components/users/Users.js"],"names":["StyledFriendShip","styled","button","sameUser","FriendshipButton","receiverId","currentUser","isPending","useState","pending","setPending","a","body","JSON","stringify","senderId","fetch","method","headers","onClick","disabled","className","id","StyledCard","div","colors","blue","UserCard","amt","user","amtCommon","requested","responded","setResponse","resId","setResId","fullName","firstName","lastName","handleFriendAcceptance","_id","accepterId","handleFriendDenial","denierId","to","src","profilePhotoSrc","userId","size","ReceivedRequests","reqs","userData","getMutualCount","map","UnrequestedUsers","users","StyledUsers","ul","Users","setUsers","receivedReqs","setReceivedReqs","userObject","setUserObject","useEffect","url","currentUserObj","received","promiseArr","json","Promise","all","then","data","currUser","recReqs","getCommonFriendCount","self","friends","filter","friend","includes","length"],"mappings":"kMAKMA,EAAmBC,IAAOC,OAAV,0WACT,qBAAGC,SAA2B,OAAS,UAqErCC,IA9Cf,YAA6E,IAAjDC,EAAgD,EAAhDA,WAAYC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,UAAWJ,EAAY,EAAZA,SAAY,EAC5CK,oBAAS,GADmC,mBACnEC,EADmE,KAC1DC,EAD0D,iDAG1E,4BAAAC,EAAA,6DACQC,EAAOC,KAAKC,UAAU,CAAET,aAAYU,SAAUT,IADtD,SAGQU,MAAM,yDAA0D,CACpEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BN,SANJ,OASEF,GAAW,GATb,4CAH0E,sBAiC1E,OACE,cAACV,EAAD,CACEmB,QAnCsE,2CAoCtEC,SAAUX,EACVN,SAAUA,EACVkB,UAAWZ,EAAU,UAAY,GACjCa,GAAIf,EAAY,UAAY,GAL9B,SAOGE,EAfD,qCACE,cAAC,IAAD,CAAeY,UAAU,SACzB,mBAAGA,UAAU,MAAb,mCAXF,qCACE,cAAC,IAAD,CAAeA,UAAU,SACzB,mBAAGA,UAAU,MAAb,+B,wJCxCFE,EAAatB,IAAOuB,IAAV,0lCA4BIC,IAAOC,MAoIZC,MAlFf,YAAgE,IAoD9CC,EApDEC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,UAAWxB,EAA0B,EAA1BA,YAAayB,EAAa,EAAbA,UAAa,EAC5BvB,oBAAS,GADmB,mBACtDwB,EADsD,KAC3CC,EAD2C,OAEnCzB,mBAAS,iBAF0B,mBAEtD0B,EAFsD,KAE/CC,EAF+C,KAGvDC,EAAQ,UAAMP,EAAKQ,UAAX,YAAwBR,EAAKS,UAHkB,SAK9CC,IAL8C,2EAK7D,gCAAA5B,EAAA,6DACQI,EAAWc,EAAKW,IAChBC,EAAanC,EACbM,EAAOC,KAAKC,UAAU,CAAEC,WAAU0B,eAH1C,SAKQzB,MAAM,4DAA6D,CACvEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BN,SARJ,OAWEuB,EAAS,aACTF,GAAY,GAZd,4CAL6D,+BAoB9CS,IApB8C,2EAoB7D,gCAAA/B,EAAA,6DACQI,EAAWc,EAAKW,IAChBG,EAAWrC,EACXM,EAAOC,KAAKC,UAAU,CAAEC,WAAU4B,aAH1C,SAKQ3B,MAAM,0DAA2D,CACrEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BN,SARJ,OAWEuB,EAAS,aACTF,GAAY,GAZd,4CApB6D,sBA4D7D,OACE,eAACV,EAAD,CAAYD,GAAG,YAAf,UACE,qBAAKD,UAAU,MAAf,SACE,cAAC,IAAD,CAAMuB,GAAE,iBAAYf,EAAKW,KAAzB,SACE,cAAC,IAAD,CACEK,IAAKhB,EAAKiB,gBACVC,OAAQlB,EAAKW,IACbQ,KAAM,aAIZ,sBAAK3B,UAAU,YAAf,UACE,cAAC,IAAD,CAAMuB,GAAE,gBAAWf,EAAKW,KAAxB,SACG,6BAAKJ,KAAkB,cAAC,IAAD,MAEzBN,GAvBSF,EAuBUE,EArBtB,mBAAGT,UAAU,eAAb,mBAAgCO,EAAhC,yBACEA,EAAM,EAAI,IAAM,OAoBiB,qBAAKP,UAAU,WAC/CU,EAxCL,sBAAKV,UAAU,WAAf,UACE,wBAAQC,GAAIY,EAAOf,QAASoB,EAAwBnB,SAAUY,EAA9D,qBAGA,wBAAQV,GAAIY,EAAOf,QAASuB,EAAoBtB,SAAUY,EAA1D,qBAOF,qBAAKV,GAAG,UAAR,SACE,cAAC,IAAD,CAAkBjB,WAAYwB,EAAKW,IAAKlC,YAAaA,aCnH5C2C,MAjBf,YAA4E,IAAhD3C,EAA+C,EAA/CA,YAAa4C,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,eACvD,OACE,mCACGF,GACCA,EAAKG,KAAI,SAACxB,GAAD,OACP,6BACE,cAAC,EAAD,CACEA,KAAMA,EACNC,UAAWsB,EAAeD,EAAUtB,GACpCvB,YAAaA,EACbyB,WAAS,KALJF,EAAKW,WCYTc,I,EAAAA,EAjBf,YAA6E,IAAjDhD,EAAgD,EAAhDA,YAAaiD,EAAmC,EAAnCA,MAAOJ,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,eACxD,OACE,mCACGG,GACCA,EAAMF,KAAI,SAACxB,GAAD,OACR,6BACE,cAAC,EAAD,CACEA,KAAMA,EACNC,UAAWsB,EAAeD,EAAUtB,GACpCvB,YAAaA,KAJRuB,EAAKW,WCFlBgB,EAAcvD,IAAOwD,GAAV,4RA8DFC,UA/Cf,YAAiC,IAAhBpD,EAAe,EAAfA,YAAe,EACJE,mBAAS,MADL,mBACvB+C,EADuB,KAChBI,EADgB,OAEUnD,mBAAS,MAFnB,mBAEvBoD,EAFuB,KAETC,EAFS,OAGMrD,mBAAS,MAHf,mBAGvBsD,EAHuB,KAGXC,EAHW,KAK9BC,qBAAU,YACR,uCAAC,oCAAArD,EAAA,6DACOsD,EAAM,6CADb,SAE8BjD,MAAM,GAAD,OAAIiD,EAAJ,kBAAiB3D,IAFpD,cAEO4D,EAFP,gBAGqBlD,MAAM,GAAD,OAAIiD,EAAJ,6BAA4B3D,IAHtD,cAGOiD,EAHP,gBAIwBvC,MAAM,GAAD,OAAIiD,EAAJ,4BAA2B3D,IAJxD,OAIO6D,EAJP,OAMOC,EAAa,CAACF,EAAeG,OAAQd,EAAMc,OAAQF,EAASE,QAElEC,QAAQC,IAAIH,GAAYI,MAAK,SAACC,GAAU,IAAD,cACFA,EADE,GAC9BC,EAD8B,KACpBnB,EADoB,KACboB,EADa,KAGrCZ,EAAcW,GACdf,EAASJ,GACTM,EAAgBc,MAbnB,4CAAD,yDAgBC,CAACrE,IAEJ,IAAMsE,EAAuB,SAACC,EAAMhD,GAClC,OAAOgD,EAAKC,QAAQC,QAAO,SAACC,GAAD,OAAYnD,EAAKiD,QAAQG,SAASD,EAAOxC,QACjE0C,QAGL,OACE,eAAC1B,EAAD,WACE,cAAC,EAAD,CACElD,YAAaA,EACb4C,KAAMU,EACNT,SAAUW,EACVV,eAAgBwB,IAElB,cAAC,EAAD,CACEtE,YAAaA,EACbiD,MAAOA,EACPJ,SAAUW,EACVV,eAAgBwB","file":"static/js/8.7027bb92.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { IoMdPersonAdd } from \"react-icons/io\";\nimport { FaUserFriends } from \"react-icons/fa\";\nimport { useState } from \"react\";\n\nconst StyledFriendShip = styled.button`\n  display: ${({ sameUser }) => (sameUser ? \"none\" : \"flex\")};\n  align-items: center;\n  justify-content: center;\n  width: 180px;\n  height: 40px;\n  cursor: pointer;\n\n  .icon {\n    font-size: 18px;\n    margin-right: 6px;\n  }\n  .txt {\n    font-size: 15px;\n    font-weight: bold;\n  }\n\n  &.pending:hover p,\n  &.pending path {\n    color: #eee;\n    cursor: auto;\n  }\n`;\n\nfunction FriendshipButton({ receiverId, currentUser, isPending, sameUser }) {\n  const [pending, setPending] = useState(false);\n\n  async function addPendingFriendship() {\n    const body = JSON.stringify({ receiverId, senderId: currentUser });\n\n    await fetch(\"https://frozen-thicket-71687.herokuapp.com/friends/add\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body,\n    });\n\n    setPending(true);\n  }\n\n  const addFriend = () => {\n    return (\n      <>\n        <IoMdPersonAdd className=\"icon\" />\n        <p className=\"txt\">Add Friend</p>\n      </>\n    );\n  };\n\n  const reqPending = () => {\n    return (\n      <>\n        <FaUserFriends className=\"icon\" />\n        <p className=\"txt\">Request Pending...</p>\n      </>\n    );\n  };\n\n  return (\n    <StyledFriendShip\n      onClick={addPendingFriendship}\n      disabled={pending}\n      sameUser={sameUser}\n      className={pending ? \"pending\" : \"\"}\n      id={isPending ? \"pending\" : \"\"}\n    >\n      {pending ? reqPending() : addFriend()}\n    </StyledFriendShip>\n  );\n}\n\nexport default FriendshipButton;\n","import Skeleton from \"react-loading-skeleton\";\nimport styled from \"styled-components\";\nimport ProfilePicture from \"./../userProfile/profilePicture\";\nimport colors from \"./../../colors\";\nimport FriendshipButton from \"./../friendshipButton/friendshipButton\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst StyledCard = styled.div`\n  display: flex;\n  width: 350px;\n  padding: 15px;\n  border-radius: 8px;\n\n  .user-data {\n    display: flex;\n    flex-direction: column;\n    margin-left: 20px;\n\n    & > * {\n      margin: 3px 0;\n    }\n\n    h3 {\n      font-size: 16px;\n    }\n\n    a {\n      text-decoration: none;\n\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n\n    button {\n      background: ${colors.blue};\n      width: 100px;\n      font-weight: bold;\n      font-size: 14px;\n\n      &:first-child {\n        margin-right: 5px;\n      }\n\n      &:hover {\n        opacity: 90%;\n      }\n    }\n\n    .req-btns button {\n      cursor: pointer;\n    }\n\n    .mutual-count {\n      font-size: 14px;\n    }\n\n    .spacer {\n      height: 16px;\n    }\n\n    #add-btn button {\n      width: 205px;\n      height: 32px;\n\n      &.pending {\n        cursor: auto;\n      }\n    }\n\n    #not-responded:not(.req-btns button:hover) {\n      opacity: 100%;\n    }\n\n    #responded {\n      opacity: 50%;\n      cursor: auto;\n\n      &:hover {\n        color: white;\n      }\n    }\n  }\n`;\n\nfunction UserCard({ user, amtCommon, currentUser, requested }) {\n  const [responded, setResponse] = useState(false);\n  const [resId, setResId] = useState(\"not-responded\");\n  const fullName = `${user.firstName} ${user.lastName}`;\n\n  async function handleFriendAcceptance() {\n    const senderId = user._id;\n    const accepterId = currentUser;\n    const body = JSON.stringify({ senderId, accepterId });\n\n    await fetch(\"https://frozen-thicket-71687.herokuapp.com/friends/accept\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body,\n    });\n\n    setResId(\"responded\");\n    setResponse(true);\n  }\n\n  async function handleFriendDenial() {\n    const senderId = user._id;\n    const denierId = currentUser;\n    const body = JSON.stringify({ senderId, denierId });\n\n    await fetch(\"https://frozen-thicket-71687.herokuapp.com/friends/deny\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body,\n    });\n\n    setResId(\"responded\");\n    setResponse(true);\n  }\n\n  const reqButtons = () => (\n    <div className=\"req-btns\">\n      <button id={resId} onClick={handleFriendAcceptance} disabled={responded}>\n        Confirm\n      </button>\n      <button id={resId} onClick={handleFriendDenial} disabled={responded}>\n        Deny\n      </button>\n    </div>\n  );\n\n  const friendButton = () => (\n    <div id=\"add-btn\">\n      <FriendshipButton receiverId={user._id} currentUser={currentUser} />\n    </div>\n  );\n\n  const common = (amt) => {\n    return (\n      <p className=\"mutual-count\">{`${amt} mutual friend${\n        amt > 1 ? \"s\" : \"\"\n      }`}</p>\n    );\n  };\n\n  return (\n    <StyledCard id=\"prof-card\">\n      <div className=\"pfp\">\n        <Link to={`/users/${user._id}`}>\n          <ProfilePicture\n            src={user.profilePhotoSrc}\n            userId={user._id}\n            size={\"70px\"}\n          />\n        </Link>\n      </div>\n      <div className=\"user-data\">\n        <Link to={`/user/${user._id}`}>\n          {<h3>{fullName}</h3> || <Skeleton />}\n        </Link>\n        {amtCommon ? common(amtCommon) : <div className=\"spacer\" />}\n        {requested ? reqButtons() : friendButton()}\n      </div>\n    </StyledCard>\n  );\n}\n\nexport default UserCard;\n","import UserCard from \"./userCard\";\n\nfunction ReceivedRequests({ currentUser, reqs, userData, getMutualCount }) {\n  return (\n    <>\n      {reqs &&\n        reqs.map((user) => (\n          <li key={user._id}>\n            <UserCard\n              user={user}\n              amtCommon={getMutualCount(userData, user)}\n              currentUser={currentUser}\n              requested\n            />\n          </li>\n        ))}\n    </>\n  );\n}\nexport default ReceivedRequests;\n","import UserCard from \"./userCard\";\n\nfunction UnrequestedUsers({ currentUser, users, userData, getMutualCount }) {\n  return (\n    <>\n      {users &&\n        users.map((user) => (\n          <li key={user._id}>\n            <UserCard\n              user={user}\n              amtCommon={getMutualCount(userData, user)}\n              currentUser={currentUser}\n            />\n          </li>\n        ))}\n    </>\n  );\n}\n\nexport default UnrequestedUsers;\n","import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ReceivedRequests from \"./receivedRequests\";\nimport UnrequestedUsers from \"./unrequestedUsers\";\n\nconst StyledUsers = styled.ul`\n  margin-top: 10px;\n  margin-bottom: 80px;\n  display: grid;\n  justify-items: center;\n  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n  gap: 4px;\n\n  li {\n    list-style: none;\n    width: fit-content;\n    height: fit-content;\n  }\n`;\n\nfunction Users({ currentUser }) {\n  const [users, setUsers] = useState(null);\n  const [receivedReqs, setReceivedReqs] = useState(null);\n  const [userObject, setUserObject] = useState(null);\n\n  useEffect(() => {\n    (async function fetchUsers() {\n      const url = \"https://frozen-thicket-71687.herokuapp.com\";\n      const currentUserObj = await fetch(`${url}/users/${currentUser}`);\n      const users = await fetch(`${url}/users/find-users/${currentUser}`);\n      const received = await fetch(`${url}/friends/pending/${currentUser}`);\n\n      const promiseArr = [currentUserObj.json(), users.json(), received.json()];\n\n      Promise.all(promiseArr).then((data) => {\n        const [currUser, users, recReqs] = data;\n\n        setUserObject(currUser);\n        setUsers(users);\n        setReceivedReqs(recReqs);\n      });\n    })();\n  }, [currentUser]);\n\n  const getCommonFriendCount = (self, user) => {\n    return self.friends.filter((friend) => user.friends.includes(friend._id))\n      .length;\n  };\n\n  return (\n    <StyledUsers>\n      <ReceivedRequests\n        currentUser={currentUser}\n        reqs={receivedReqs}\n        userData={userObject}\n        getMutualCount={getCommonFriendCount}\n      />\n      <UnrequestedUsers\n        currentUser={currentUser}\n        users={users}\n        userData={userObject}\n        getMutualCount={getCommonFriendCount}\n      />\n    </StyledUsers>\n  );\n}\n\nexport default Users;\n"],"sourceRoot":""}