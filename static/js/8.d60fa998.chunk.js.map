{"version":3,"sources":["components/friendshipButton/friendshipButton.js","components/userProfile/banner/uploadHandler.js","components/userProfile/banner/bannerModal.js","components/userProfile/profileHeader.js","components/friends/friendCard.js","components/friends/friendsList.js","components/userProfile/UserProfile.js"],"names":["StyledFriendShip","styled","button","sameUser","FriendshipButton","receiverId","currentUser","isPending","useState","pending","setPending","a","body","JSON","stringify","senderId","fetch","method","headers","onClick","disabled","className","id","StyledHandler","form","colors","blue","gray","imgError","cookies","Cookies","UploadHandler","user","toggleOff","setBannerSrc","imgFile","setImage","src","setSrc","spinnerVis","setSpinnerVis","setImgError","token","get","handleSubmit","e","preventDefault","compressImage","compressedImg","formData","FormData","append","url","Authorization","then","res","json","data","clearHandler","catch","err","console","error","onSubmit","encType","type","name","accept","onChange","files","target","URL","createObjectURL","size","htmlFor","alt","value","vis","StyledBanner","div","BannerModal","toggleModalOff","tagName","classList","includes","useEffect","window","addEventListener","removeEventListener","StyledHeader","lm","white","ProfileHeader","props","userId","pfpSrc","lightMode","needsUpdate","setUpdateStatus","userName","friendshipPending","alreadyFriends","bannerSrc","modalVis","setVis","bannerVis","setBannerVis","toggleBannerModal","loader","color","highlightColor","height","banner","bannerUploader","noBanner","undefined","width","toggle","profile","StyledCard","FriendCard","friend","profilePhotoSrc","to","_id","firstName","lastName","StyledFriends","ul","black","FriendsList","friends","listRef","useRef","mapFriends","map","ref","current","scrollLeft","clientWidth","length","UserProfile","pfp","postRef","match","useRouteMatch","params","setUserName","posts","setPosts","setFriendStatus","setPfpSrc","setFriends","setAlreadyFriends","dataResponse","pendingFriends","fr","response","setFeed","fromProfile"],"mappings":"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","file":"static/js/8.d60fa998.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { IoMdPersonAdd } from \"react-icons/io\";\nimport { FaUserFriends } from \"react-icons/fa\";\nimport { useState } from \"react\";\n\nconst StyledFriendShip = styled.button`\n  display: ${({ sameUser }) => (sameUser ? \"none\" : \"flex\")};\n  align-items: center;\n  justify-content: center;\n  width: 180px;\n  height: 40px;\n  cursor: pointer;\n\n  .icon {\n    font-size: 18px;\n    margin-right: 6px;\n  }\n  .txt {\n    font-size: 15px;\n    font-weight: bold;\n  }\n\n  &.pending:hover p,\n  &.pending path {\n    color: #eee;\n    cursor: auto;\n  }\n`;\n\nfunction FriendshipButton({ receiverId, currentUser, isPending, sameUser }) {\n  const [pending, setPending] = useState(false);\n\n  async function addPendingFriendship() {\n    const body = JSON.stringify({ receiverId, senderId: currentUser });\n\n    await fetch(\"https://frozen-thicket-71687.herokuapp.com/friends/add\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body,\n    });\n\n    setPending(true);\n  }\n\n  const addFriend = () => {\n    return (\n      <>\n        <IoMdPersonAdd className=\"icon\" />\n        <p className=\"txt\">Add Friend</p>\n      </>\n    );\n  };\n\n  const reqPending = () => {\n    return (\n      <>\n        <FaUserFriends className=\"icon\" />\n        <p className=\"txt\">Request Pending...</p>\n      </>\n    );\n  };\n\n  return (\n    <StyledFriendShip\n      onClick={addPendingFriendship}\n      disabled={pending}\n      sameUser={sameUser}\n      className={pending ? \"pending\" : \"\"}\n      id={isPending ? \"pending\" : \"\"}\n    >\n      {pending ? reqPending() : addFriend()}\n    </StyledFriendShip>\n  );\n}\n\nexport default FriendshipButton;\n","import styled from \"styled-components\";\nimport { AiFillPicture } from \"react-icons/ai\";\nimport colors from \"./../../../colors\";\nimport { useState } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport Spinner from \"./../../spinner/spinner\";\nimport compressImage from \"./../../../utils/compressImage\";\n\nconst StyledHandler = styled.form`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n  z-index: 10;\n  width: 100%;\n  max-width: 400px;\n  max-height: 90vh;\n  padding-bottom: 15px;\n  border-radius: 8px;\n  box-shadow: 0 0.1px 0.8px rgba(0, 0, 0, 0.02),\n    0 0.1px 1.9px rgba(0, 0, 0, 0.028), 0 0.3px 3.5px rgba(0, 0, 0, 0.035),\n    0 0.4px 6.3px rgba(0, 0, 0, 0.042), 0 0.8px 11.7px rgba(0, 0, 0, 0.05);\n\n  input[type=\"file\"] {\n    display: none;\n  }\n\n  .banner-icon {\n    font-size: 100px;\n    cursor: pointer;\n    color: ${colors.blue};\n    justify-self: center;\n  }\n\n  label {\n    height: fit-content;\n    width: fit-content;\n    display: grid;\n    flex-direction: column;\n    grid-auto-flow: row;\n    justify-content: center;\n    margin-bottom: 10px;\n\n    p.banner-upload-txt {\n      padding: 0;\n      text-align: center;\n      font-size: 14px;\n\n      &:hover {\n        text-decoration: underline;\n        cursor: pointer;\n      }\n    }\n  }\n\n  input[type=\"submit\"] {\n    margin-top: 20px;\n    width: 95%;\n    max-width: 400px;\n    font-size: 18px;\n    padding: 10px;\n\n    &:hover,\n    &:active {\n      background: ${colors.blue};\n      cursor: pointer;\n    }\n  }\n\n  img {\n    display: none;\n    height: 0;\n  }\n\n  img[src] {\n    display: block;\n    height: auto;\n    margin-top: 15px;\n    max-width: 95%;\n    max-height: 300px;\n  }\n\n  #esc {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    height: 40px;\n    width: 40px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n\n    &:hover,\n    &:active {\n      opacity: 80%;\n    }\n\n    span {\n      display: block;\n      height: 2px;\n      width: 25px;\n      background: ${colors.gray};\n      border-radius: 8px;\n\n      &:first-child {\n        transform: rotate(45deg);\n        position: absolute;\n        left: 8px;\n      }\n\n      &:last-child {\n        transform: rotate(-45deg);\n        position: absolute;\n        left: 8px;\n      }\n    }\n  }\n\n  input#img-text-input {\n    width: 95%;\n    min-height: 35px;\n    max-width: 400px;\n    font-size: 14px;\n\n    &:hover {\n      opacity: 70%;\n    }\n  }\n\n  .img-error {\n    display: ${({ imgError }) => (imgError ? \"flex\" : \"none\")};\n    padding: 5px;\n    padding-top: 20px;\n    font-size: 14px;\n    text-align: center;\n  }\n\n  .spinner {\n    position: absolute;\n    bottom: 25px;\n    left: 35px;\n  }\n\n  @media (min-width: 400px) {\n    .spinner {\n      left: 17%;\n    }\n  }\n  @media (min-width: 450px) {\n    .spinner {\n      left: 20%;\n    }\n  }\n`;\n\nconst cookies = new Cookies();\n\nfunction UploadHandler({ user, toggleOff, setBannerSrc }) {\n  const [imgFile, setImage] = useState(null);\n  const [src, setSrc] = useState(null);\n  const [spinnerVis, setSpinnerVis] = useState(false);\n  const [imgError, setImgError] = useState(false);\n  const token = cookies.get(\"token\");\n\n  const handleImgInput = (files) => {\n    setImage(files[0]);\n    setSrc(URL.createObjectURL(files[0]));\n\n    if (imgError) {\n      setImgError(false);\n    }\n\n    if (files[0].size > 6000000) {\n      setImgError(true);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!imgFile || imgError) return;\n\n    setSpinnerVis(true);\n\n    const compressedImg = await compressImage(imgFile);\n\n    const formData = new FormData();\n    formData.append(\"file\", compressedImg);\n\n    const url = `https://frozen-thicket-71687.herokuapp.com/upload/banner/no-feed/${user}`;\n\n    await fetch(url, {\n      method: \"post\",\n      body: formData,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(async (res) => {\n        const data = await res.json();\n\n        setBannerSrc(data.src);\n        clearHandler();\n        setSpinnerVis(false);\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const clearHandler = () => {\n    toggleOff();\n    setImage(null);\n    setSrc(null);\n    setImgError(false);\n    setSpinnerVis(false);\n  };\n\n  return (\n    <StyledHandler\n      id=\"img-form\"\n      onSubmit={handleSubmit}\n      encType=\"multipart/form-data\"\n      className=\"modal-component\"\n      imgError={imgError}\n    >\n      <input\n        type=\"file\"\n        name=\"banner-file\"\n        id=\"banner-file\"\n        accept=\".png, .jpeg, .jpg\"\n        onChange={(e) => handleImgInput([...e.target.files])}\n        className=\"modal-component\"\n      />\n      <label htmlFor=\"banner-file\" className=\"modal-component\">\n        <AiFillPicture className=\"banner-upload-icon banner-icon modal-component\" />\n        <p className=\"banner-upload-txt modal-component\">Upload an image</p>\n      </label>\n      <img src={src} alt=\"preview\" className=\"banner-preview modal-component\" />\n      <p className=\"img-error\">\n        This image is too large! If you really want to post it, please compress\n        it.\n      </p>\n      <input\n        type=\"submit\"\n        value=\"Change cover photo\"\n        className=\"modal-component\"\n        disabled={spinnerVis}\n      />\n      <Spinner className=\"spinner\" vis={spinnerVis} />\n      <button id=\"esc\" onClick={clearHandler} className=\"modal-component\">\n        <span />\n        <span />\n      </button>\n    </StyledHandler>\n  );\n}\n\nexport default UploadHandler;\n","import { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport UploadHandler from \"./uploadHandler\";\n\nconst StyledBanner = styled.div`\n  display: ${({ vis }) => (vis ? \"flex\" : \"none\")};\n  justify-content: center;\n  position: fixed;\n  top: 20px;\n  left: 0;\n  width: 80%;\n  margin: 0 10%;\n  z-index: 3;\n  animation: comeFromTop 0.2s cubic-bezier(0.18, 0.89, 0.32, 1.28);\n\n  @keyframes comeFromTop {\n    from {\n      top: -50px;\n    }\n  }\n`;\n\nfunction BannerModal({ vis, toggleOff, user, setBannerSrc }) {\n  const toggleModalOff = (e) => {\n    if (e.target.tagName === \"path\") return;\n    if ([...e.target.classList].includes(\"modal-component\")) return;\n    if (vis) toggleOff();\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"click\", toggleModalOff);\n\n    return () => {\n      window.removeEventListener(\"click\", toggleModalOff);\n    };\n  });\n\n  return (\n    <StyledBanner vis={vis}>\n      <UploadHandler\n        toggleOff={toggleOff}\n        user={user}\n        setBannerSrc={setBannerSrc}\n      />\n    </StyledBanner>\n  );\n}\n\nexport default BannerModal;\n","import styled from \"styled-components\";\nimport ProfilePicture from \"./profilePicture\";\nimport FriendshipButton from \"./../friendshipButton/friendshipButton\";\nimport ImageHandlerModal from \"./../imageHandler/imageHandlerModal\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport { useState } from \"react\";\nimport { MdPhotoCamera } from \"react-icons/md\";\nimport BannerModal from \"./banner/bannerModal\";\nimport colors from \"./../../colors\";\n\nconst StyledHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: center;\n  min-height: 50vh;\n\n  .pfp {\n    position: relative;\n  }\n\n  .name-wrap {\n    max-width: fit-content;\n    font-size: 18px;\n    margin-top: 22px;\n    margin-bottom: 15px;\n  }\n\n  form {\n    display: flex;\n    flex-flow: column nowrap;\n  }\n\n  input[type=\"text\"] {\n    background: ${({ lm }) => (lm ? \"#d8d8d8\" : \"#707070\")};\n    padding: 8px;\n    padding-left: 10px;\n    border-style: none;\n    border-radius: 18px;\n    height: 37px;\n    opacity: 60%;\n    color: ${({ lm }) => (lm ? \"#000\" : \"#fff\")};\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  @keyframes comeFromBottom {\n    from {\n      bottom: 0;\n      opacity: 0;\n    }\n  }\n\n  .loader {\n    background: #c0c0c0;\n    height: 100%;\n    width: 100%;\n  }\n\n  .banner {\n    position: absolute;\n    top: 0;\n    max-height: 30vh;\n    height: 100%;\n    width: 100%;\n\n    img {\n      object-fit: cover;\n      height: 100%;\n      width: 100%;\n    }\n\n    &-upload {\n      position: absolute;\n      top: 10px;\n      right: 20px;\n      font-size: 26px;\n      cursor: pointer;\n      text-shadow: 1px 1px 1px #222;\n\n      &:hover,\n      &:active {\n        filter: brightness(1.2);\n      }\n    }\n  }\n\n  .pfp-edit-icon {\n    display: ${({ sameUser }) => (sameUser ? \"flex\" : \"none\")};\n    position: absolute;\n    right: 15px;\n    bottom: 10px;\n    border-radius: 50%;\n    background: ${({ lm }) => (lm ? colors.white : colors.gray)};\n    height: 40px;\n    width: 40px;\n    padding: 6px;\n    border: 1px solid ${colors.gray}33;\n\n    &:hover,\n    &:active {\n      cursor: pointer;\n      filter: brightness(${({ lm }) => (lm ? 1.05 : 1.2)});\n    }\n  }\n\n  @media (min-width: 1024px) {\n    & {\n      min-height: 65vh;\n    }\n\n    .banner {\n      min-height: 48vh;\n    }\n  }\n`;\n\nfunction ProfileHeader(props) {\n  const {\n    currentUser,\n    userId,\n    pfpSrc,\n    lightMode,\n    needsUpdate,\n    setUpdateStatus,\n    userName,\n    friendshipPending,\n    alreadyFriends,\n    bannerSrc,\n    setBannerSrc,\n  } = props;\n\n  const [modalVis, setVis] = useState(false);\n  const [bannerVis, setBannerVis] = useState(false);\n\n  const toggleBannerModal = () => setBannerVis(!bannerVis);\n\n  const loader = (\n    <SkeletonTheme color={\"#dadada\"} highlightColor={\"#e0e0e0\"}>\n      <Skeleton height={\"30vh\"} />\n    </SkeletonTheme>\n  );\n\n  const banner = (\n    <img\n      src={\"https://frozen-thicket-71687.herokuapp.com/images/\" + bannerSrc}\n      alt=\"profile banner\"\n    />\n  );\n\n  const bannerUploader = (\n    <div className=\"banner-upload\" onClick={toggleBannerModal}>\n      <MdPhotoCamera />\n    </div>\n  );\n\n  const noBanner = bannerSrc === null || bannerSrc === undefined;\n\n  return (\n    <StyledHeader\n      lm={lightMode}\n      sameUser={currentUser === userId}\n      className=\"grid-prof-head\"\n    >\n      <div className=\"banner\">\n        {userId === currentUser ? bannerUploader : <div />}\n        {noBanner ? loader : banner}\n      </div>\n      <BannerModal\n        vis={bannerVis}\n        toggleOff={toggleBannerModal}\n        user={currentUser}\n        setBannerSrc={setBannerSrc}\n      />\n      <div className=\"pfp\">\n        <ProfilePicture\n          size={\"250px\"}\n          src={pfpSrc}\n          userId={currentUser}\n          lightMode={lightMode}\n          needsUpdate={needsUpdate}\n          setUpdateStatus={setUpdateStatus}\n        />\n        <MdPhotoCamera\n          className=\"pfp-edit-icon\"\n          onClick={() => {\n            if (currentUser === userId) setVis(!modalVis);\n          }}\n        />\n      </div>\n      <div className=\"name-wrap\">\n        <h2>{userName || <Skeleton width={150} />}</h2>\n      </div>\n      {alreadyFriends ? (\n        <div />\n      ) : (\n        <FriendshipButton\n          receiverId={userId}\n          currentUser={currentUser}\n          isPending={friendshipPending}\n          sameUser={currentUser === userId}\n          alreadyFriends={alreadyFriends}\n        />\n      )}\n      <ImageHandlerModal\n        vis={modalVis}\n        user={currentUser}\n        toggle={() => setVis(!modalVis)}\n        setUpdateStatus={setUpdateStatus}\n        profile\n      />\n    </StyledHeader>\n  );\n}\n\nexport default ProfileHeader;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport colors from \"./../../colors\";\n\nconst StyledCard = styled.div`\n  background: ${({ lightMode }) => (lightMode ? colors.white : colors.gray)};\n  border-radius: 8px;\n  border: 1px solid\n    ${({ lightMode }) => (lightMode ? colors.gray : colors.white)}22;\n  height: 100%;\n  width: 160px;\n  min-width: 160px;\n  box-shadow: 0 2.6px 1.3px rgba(0, 0, 0, 0.07),\n    0 3.7px 4.3px rgba(0, 0, 0, 0.036), 0 4px 15px rgba(0, 0, 0, 0.027);\n\n  & .link {\n    text-decoration: none;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  & .link:hover,\n  & .link:active {\n    text-decoration: underline;\n  }\n\n  .frame {\n    width: 100%;\n    max-height: 200px;\n\n    img {\n      height: 150px;\n      width: 100%;\n      object-fit: cover;\n      border-top-left-radius: 8px;\n      border-top-right-radius: 8px;\n    }\n  }\n\n  .detail {\n    height: 45px;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: start;\n  }\n\n  h3 {\n    font-size: 1em;\n    margin-top: 8px;\n  }\n\n  @media (min-width: 1024px) {\n    & {\n      width: auto;\n    }\n  }\n`;\n\nfunction FriendCard({ friend, lightMode }) {\n  const src =\n    \"https://frozen-thicket-71687.herokuapp.com/images/\" +\n    friend.profilePhotoSrc;\n\n  return (\n    <StyledCard lightMode={lightMode}>\n      <Link to={`/user/${friend._id}`} className=\"link\">\n        <div className=\"frame\">\n          <img src={src} alt=\"friend\" />\n        </div>\n        <div className=\"detail\">\n          <h3>{friend.firstName + \" \" + friend.lastName}</h3>\n        </div>\n      </Link>\n    </StyledCard>\n  );\n}\n\nexport default FriendCard;\n","import styled from \"styled-components\";\nimport FriendCard from \"./friendCard\";\nimport colors from \"./../../colors\";\nimport { useRef } from \"react\";\nimport { BsChevronLeft, BsChevronRight } from \"react-icons/bs\";\n\nconst StyledFriends = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-rows: 30px 30px 30px repeat(auto-fit, 1fr);\n  justify-content: start;\n  gap: 8px;\n  width: 95%;\n  max-width: 750px;\n  overflow-x: scroll;\n  scrollbar-width: none;\n  background: ${({ lm }) => (lm ? \"#eee\" : colors.gray)};\n  border: 1px solid ${({ lm }) => (lm ? colors.gray : colors.white)}11;\n  padding: 18px;\n  padding-right: 20px;\n  padding-top: 45px;\n  padding-bottom: 8px;\n  border-radius: 8px;\n  margin: 10px auto;\n  margin-bottom: 20px;\n  position: relative;\n  filter: scale(1);\n  box-shadow: 0 0.1px 0.8px rgba(0, 0, 0, 0.02),\n    0 0.1px 1.9px rgba(0, 0, 0, 0.028), 0 0.3px 3.5px rgba(0, 0, 0, 0.035),\n    0 0.4px 6.3px rgba(0, 0, 0, 0.042), 0 0.8px 11.7px rgba(0, 0, 0, 0.05);\n\n  .count {\n    position: absolute;\n    top: 12px;\n    left: 18px;\n  }\n\n  button {\n    color: ${colors.black};\n    font-size: 45px;\n    position: sticky;\n    width: 0;\n    padding: 0;\n    top: 0;\n    right: 40px;\n    cursor: pointer;\n\n    &:first-child {\n      left: 0;\n    }\n\n    svg:hover {\n      filter: brightness(2);\n    }\n  }\n`;\n\nfunction FriendsList({ friends, lightMode }) {\n  const listRef = useRef(null);\n\n  const mapFriends = friends.map((friend) => {\n    return (\n      <li key={friend._id}>\n        <FriendCard friend={friend} lightMode={lightMode} />\n      </li>\n    );\n  });\n\n  const shiftLeft = () =>\n    (listRef.current.scrollLeft -= listRef.current.clientWidth);\n  const shiftRight = (e) =>\n    (listRef.current.scrollLeft += listRef.current.clientWidth);\n\n  return (\n    <>\n      <StyledFriends ref={listRef} lm={lightMode} className=\"grid-friend-list\">\n        <button onClick={shiftLeft}>\n          <BsChevronLeft />\n        </button>\n        <h4 className=\"count\">Friends ( {friends.length} )</h4>\n        {friends.length === 0 ? <div /> : mapFriends}\n        <button onClick={shiftRight}>\n          <BsChevronRight />\n        </button>\n      </StyledFriends>\n    </>\n  );\n}\n\nexport default FriendsList;\n","import React, { useEffect, useState } from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport Feed from \"./../feed/feed\";\nimport ProfileHeader from \"./profileHeader\";\nimport StatusForm from \"./../homepage/statusForm/statusForm\";\nimport FriendsList from \"./../friends/friendsList\";\n\nfunction UserProfile({\n  colors,\n  lightMode,\n  user,\n  currentUser,\n  pfp,\n  postRef,\n  needsUpdate,\n  setUpdateStatus,\n}) {\n  const match = useRouteMatch();\n  const userId = user || match.params.userId;\n  const [userName, setUserName] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [friendshipPending, setFriendStatus] = useState(null);\n  const [pfpSrc, setPfpSrc] = useState(null);\n  const [friends, setFriends] = useState([]);\n  const [alreadyFriends, setAlreadyFriends] = useState(null);\n  const [bannerSrc, setBannerSrc] = useState(null);\n\n  useEffect(() => {\n    (async function fetchUserData() {\n      const dataResponse = await fetch(\n        `https://frozen-thicket-71687.herokuapp.com/users/${userId}`\n      );\n      const data = await dataResponse.json();\n\n      setFriendStatus(data.pendingFriends.includes(currentUser));\n      setUserName(data.firstName + \" \" + data.lastName);\n      setPfpSrc(data.profilePhotoSrc);\n      setBannerSrc(data.bannerSrc);\n      setFriends(data.friends);\n      setAlreadyFriends(data.friends.map((fr) => fr._id).includes(currentUser));\n    })();\n  }, [userId, currentUser]);\n\n  useEffect(() => {\n    (async function fetchPosts() {\n      const response = await fetch(\n        `https://frozen-thicket-71687.herokuapp.com/posts/byuser/${userId}`\n      );\n\n      const data = await response.json();\n      setPosts(data);\n    })();\n  }, [userId]);\n\n  return (\n    <>\n      <ProfileHeader\n        currentUser={currentUser}\n        userId={userId}\n        pfpSrc={pfpSrc}\n        lightMode={lightMode}\n        needsUpdate={needsUpdate}\n        setUpdateStatus={setUpdateStatus}\n        userName={userName}\n        friendshipPending={friendshipPending}\n        alreadyFriends={alreadyFriends}\n        bannerSrc={bannerSrc}\n        setBannerSrc={setBannerSrc}\n      />\n      <div className=\"prof-content-wrap\">\n        <FriendsList friends={friends} lightMode={lightMode} />\n        {currentUser === userId ? (\n          <StatusForm\n            colors={colors}\n            currentUser={currentUser}\n            lightMode={lightMode}\n            setFeed={setPosts}\n            src={pfp}\n            postRef={postRef}\n            fromProfile\n          />\n        ) : (\n          <div />\n        )}\n        <Feed\n          user={userId}\n          posts={posts}\n          setPosts={setPosts}\n          src={pfpSrc}\n          currentUser={currentUser}\n          pfp={pfp}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default UserProfile;\n"],"sourceRoot":""}