{"version":3,"sources":["components/userProfile/profilePicture.js","components/spinner/spinner.js","colors.js","components/nav/components/toggle.js","components/nav/components/accountSettings.js","components/nav/components/mainAccountSettings.js","components/nav/components/createPost.js","components/nav/components/notification.js","components/nav/components/notifications.js","components/nav/components/home.js","components/nav/components/users.js","components/nav/nav.js","utils/emailRegex.js","components/login/createAccount.js","components/login/form.js","components/login/login.js","App.js","index.js"],"names":["black","colors","StyledProfile","styled","div","size","lm","ProfilePicture","lightMode","needsUpdate","setUpdateStatus","src","userId","useState","imgSrc","setSrc","fullSrc","useEffect","a","fetch","res","text","data","className","circle","height","width","alt","loading","StyledSpinner","vis","Spinner","id","gray","yellow","white","red","blue","lightBlue","lightBlueHover","StyledToggle","light","Toggle","StyledSettings","cookies","Cookies","AccountSettings","modalVis","currentUser","toggleVis","changeColorMode","userName","pfp","toggleModalOff","e","target","classList","includes","document","querySelector","addEventListener","removeEventListener","to","onClick","set","window","location","href","origin","MainAccountSettings","props","setCurrentUser","settingsModalVis","setSettingsVis","toggleSettingsModal","onKeyDown","key","click","tabIndex","CreatePost","focusRef","StyledNotification","Notification","notif","markRead","user","sender","firstName","lastName","_id","profilePhotoSrc","type","sentence","split","receiver","formatSentence","notificationType","moment","createdAt","fromNow","StyledNotifications","button","notifLength","StyledNotifs","ul","Notifications","notifsModal","setNotifsVis","notifs","setNotifs","toggleOffNotifs","json","Array","isArray","fetchNotifications","notifId","body","JSON","stringify","method","headers","mapNotifs","map","length","HomeLink","UsersLink","StyledNav","Nav","setLightMode","emailRegex","StyledForm","form","spinnerVis","CreateAccountForm","toggle","setActiveUser","email","setEmail","password","setPass","setFirstName","setLastName","errorMsg","setErrorMsg","setSpinnerVis","fieldsEmpty","handleAccountCreation","preventDefault","test","userData","mode","then","token","error","message","catch","err","console","onSubmit","placeholder","onChange","value","maxLength","required","minLength","StlyedForm","createVis","errVis","Form","pass","errorModalVis","setErrorVis","setMsg","accountCreationVis","setAccCreationVis","toggleAccountCreator","handleLogin","status","msg","LoginBody","createGlobalStyle","StyledLoginPage","LoginPage","rel","UserProfile","lazy","Profile","HomePage","Users","GlobalStyle","App","get","userCookie","isLight","setPfp","setName","postRef","useRef","fetchData","current","focus","fallback","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"0MAIQA,EAAUC,IAAVD,MAEFE,EAAgBC,IAAOC,IAAV,weAEH,qBAAGC,QAEgB,gBAAGC,EAAH,EAAGA,GAAIN,EAAP,EAAOA,MAAP,OAAoBM,EAAKN,EAAQ,KAAO,iBAClD,gBAAGM,EAAH,EAAGA,GAAIN,EAAP,EAAOA,MAAP,OAAoBM,EAAKN,EAAQ,KAAO,iBACxC,gBAAGM,EAAH,EAAGA,GAAIN,EAAP,EAAOA,MAAP,OAAoBM,EAAKN,EAAQ,KAAO,iBACvC,gBAAGM,EAAH,EAAGA,GAAIN,EAAP,EAAOA,MAAP,OAAoBM,EAAKN,EAAQ,KAAO,iBACxC,gBAAGM,EAAH,EAAGA,GAAIN,EAAP,EAAOA,MAAP,OAAoBM,EAAKN,EAAQ,KAAO,iBAC3C,gBAAGM,EAAH,EAAGA,GAAIN,EAAP,EAAOA,MAAP,OAAoBM,EAAKN,EAAQ,KAAO,iBAGjD,qBAAGK,QACJ,qBAAGA,QA+CDE,IAnCf,YAOI,IANFF,EAMC,EANDA,KACAG,EAKC,EALDA,UACAC,EAIC,EAJDA,YACAC,EAGC,EAHDA,gBACAC,EAEC,EAFDA,IACAC,EACC,EADDA,OACC,EACwBC,mBAAS,MADjC,mBACMC,EADN,KACcC,EADd,KAEKC,EAAU,qDAAuDL,EAgBvE,OAdAM,qBAAU,WACJR,GACF,uCAAC,8BAAAS,EAAA,sEACmBC,MAAM,0DAAD,OACqCP,IAF7D,cACOQ,EADP,gBAIoBA,EAAIC,OAJxB,OAIOC,EAJP,OAMCP,EAAO,qDAAuDO,GAC9DZ,GAAgB,GAPjB,2CAAD,yDAUD,CAACD,EAAaG,EAAQF,IAGvB,cAACR,EAAD,CAAeI,GAAIE,EAAWR,MAAOA,EAAOK,KAAMA,EAAlD,SACE,sBAAKkB,UAAU,QAAf,WACIZ,GAAO,cAAC,IAAD,CAAUa,QAAQ,EAAMC,OAAQpB,EAAMqB,MAAOrB,IACrDM,GAAO,qBAAKA,IAAKG,GAAUE,EAASW,IAAI,UAAUC,QAAQ,gB,mECzD7DC,EAAgB1B,IAAOC,IAAV,iPACN,qBAAG0B,IAAiB,OAAS,UAGzB,qBAAGzB,MAAmB,MAmBxB0B,IARf,YAAiC,IAAd1B,EAAa,EAAbA,KAAMyB,EAAO,EAAPA,IACvB,OACE,cAACD,EAAD,CAAexB,KAAMA,EAAMyB,IAAKA,EAAhC,SACE,cAAC,IAAD,CAAWP,UAAU,UAAUS,GAAG,gB,+BCVzB/B,IAXA,CACbD,MAAO,UACPiC,KAAM,UACNC,OAAQ,UACRC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,UAAW,UACXC,eAAgB,Y,gLCNZC,EAAerC,IAAOC,IAAV,2sBASA,gBAAGqC,EAAH,EAAGA,MAAOR,EAAV,EAAUA,KAAME,EAAhB,EAAgBA,MAAhB,OAA6BM,EAAQR,EAAOE,KAKtC,qBAAGA,SAGT,gBAAGM,EAAH,EAAGA,MAAOR,EAAV,EAAUA,KAAME,EAAhB,EAAgBA,MAAhB,OAA6BM,EAAQN,EAAQF,KAIvC,qBAAGE,SAKf,qBAAGM,MAAqB,OAAS,SAmB9BC,I,EAAAA,EAbf,YAAoC,IAAlBzC,EAAiB,EAAjBA,OAAQwC,EAAS,EAATA,MAChBR,EAAgBhC,EAAhBgC,KAAME,EAAUlC,EAAVkC,MAEd,OACE,cAACK,EAAD,CAAcP,KAAMA,EAAME,MAAOA,EAAOM,MAAOA,EAA/C,SACE,sBAAKlB,UAAU,yBAAf,UACE,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,+B,gBCjCfvB,EAAuBC,IAAvBD,MAAOiC,EAAgBhC,IAAhBgC,KAAME,EAAUlC,IAAVkC,MAEfQ,EAAiBxC,IAAOC,IAAV,k1CACP,qBAAG0B,IAAiB,OAAS,UAK1B,qBAAGW,MAAqBN,EAAQF,KAE1B,qBAAGQ,MAAqBzC,EAAQmC,KAE3C,qBAAGM,MAAqBzC,EAAQmC,KAM5B,qBAAGM,MAAqBzC,EAAQmC,KAkBhC,qBAAGM,MAAqBzC,EAAQmC,EAAQ,QAenC,qBAAGM,MAAqBR,EAAOE,KACpC,qBAAGM,MAAqBzC,EAAQmC,KAOhB,qBAAGM,MAAqBzC,EAAQmC,KAsB3C,qBAAGM,MAAqBR,EAAOE,KAU7CS,EAAU,IAAIC,IAuELC,MArEf,YAQI,IAPFC,EAOC,EAPDA,SACAC,EAMC,EANDA,YACAC,EAKC,EALDA,UACAR,EAIC,EAJDA,MACAS,EAGC,EAHDA,gBACAC,EAEC,EAFDA,SACAC,EACC,EADDA,IAEMC,EAAiB,SAACC,GAClB,YAAIA,EAAEC,OAAOC,WAAWC,SAAS,oBACjCV,GAAUE,KAmBhB,OAhBAhC,qBAAU,WAGR,OAFAyC,SAASC,cAAc,QAAQC,iBAAiB,QAASP,GAElD,WACLK,SACGC,cAAc,QACdE,oBAAoB,QAASR,OAWlC,eAACV,EAAD,CACEb,IAAKiB,EACLN,MAAOA,EACPT,GAAG,iBACHT,UAAU,kBAJZ,UAME,eAAC,IAAD,CACEuC,GAAG,WACHvC,UAAU,iCACVwC,QAASd,EAHX,UAKE,qBAAK1B,UAAU,MAAf,SACE,cAAC,IAAD,CAAgBZ,IAAKyC,EAAKxC,OAAQoC,EAAa3C,KAAM,WAEvD,sBAAKkB,UAAU,uCAAf,UACE,6BAAK4B,IACL,uDAGJ,qBAAK5B,UAAU,2BACf,qBAAIA,UAAU,kBAAd,UACE,qBAAIwC,QAASb,EAAiB3B,UAAU,kBAAxC,UACE,qBAAKA,UAAU,OAAf,SACE,cAAC,EAAD,CAAQtB,OAAQA,IAAQwC,MAAOA,MAEjC,mBAAGlB,UAAU,kBAAb,kCAEF,qBAAIwC,QAlCW,WACnBnB,EAAQoB,IAAI,cAAe,MAC3BpB,EAAQoB,IAAI,QAAS,MACrBC,OAAOC,SAASC,KAAOF,OAAOC,SAASE,OAAS,gBA+BjB7C,UAAU,yBAArC,UACE,qBAAKA,UAAU,OAAf,SACE,cAAC,IAAD,MAEF,iDCrHK8C,MA1Cf,SAA6BC,GAAQ,IAEjCtB,EAMEsB,EANFtB,YACAxC,EAKE8D,EALF9D,UACA0C,EAIEoB,EAJFpB,gBACAqB,EAGED,EAHFC,eACApB,EAEEmB,EAFFnB,SACAC,EACEkB,EADFlB,IAPgC,EASSvC,oBAAS,GATlB,mBAS3B2D,EAT2B,KASTC,EATS,KAW5BC,EAAsB,kBAAMD,GAAgBD,IAOlD,OACE,qCACE,wBACEG,UARgB,SAACrB,GACP,QAAVA,EAAEsB,KACNtB,EAAEC,OAAOsB,SAOLd,QAASW,EACTI,SAAS,IACTvD,UAAU,WAJZ,SAME,cAAC,IAAD,MAEF,cAAC,EAAD,CACEwB,SAAUyB,EACVxB,YAAaA,EACbC,UAAWyB,EACXjC,MAAOjC,EACP0C,gBAAiBA,EACjBqB,eAAgBA,EAChBpB,SAAUA,EACVC,IAAKA,QC9BE2B,I,EAAAA,EARf,YAAmC,IAAbC,EAAY,EAAZA,SACpB,OACE,wBAAQzD,UAAU,YAAYwC,QAASiB,EAAvC,SACE,cAAC,IAAD,O,iBCDAC,EAAqB9E,IAAOC,IAAV,6TA+DT8E,I,IAAAA,EA9Cf,YAAkD,IAA1BC,EAAyB,EAAzBA,MAAaC,GAAY,EAAlBC,KAAkB,EAAZD,UAC7BE,EAASH,EAAMG,OAAOC,UAAY,IAAMJ,EAAMG,OAAOE,SA2B3D,OACE,eAACP,EAAD,CACEjD,GAAG,aACH+B,QAASqB,EAASD,EAAMM,KACxBlE,UAAU,kBAHZ,UAKE,cAAC,IAAD,CAAgBlB,KAAM,OAAQM,IAAKwE,EAAMG,OAAOI,kBAChD,sBAAKnE,UAAU,+BAAf,UACE,oBAAGA,UAAU,kBAAb,UACE,4BAAI+D,IAnCW,SAACK,GAAU,IAE5BC,EAF2B,EACND,EAAKE,MAAM,KADL,mBAC1BC,EAD0B,KAI/B,OAJ+B,MAK7B,IAAK,MACHF,EAAW,8BACX,MACF,IAAK,SACHA,EAAW,iCACX,MACF,IAAK,OACc,SAAbE,IAAqBF,EAAW,qBACnB,YAAbE,IAAwBF,EAAW,wBACvC,MACF,IAAK,UACc,SAAbE,IAAqBF,EAAW,0BACnB,YAAbE,IAAwBF,EAAW,6BAM3C,OAAOA,EAaAG,CAAeZ,EAAMa,qBAExB,mBAAGzE,UAAU,kBAAb,SAAgC0E,IAAOd,EAAMe,WAAWC,mBCvD1DC,EAAsBjG,IAAOkG,OAAV,4jBASZpG,IAAOD,OAKJ,gBAAGsG,EAAH,EAAGA,YAAH,OACVA,EAAc,EAAI,KAAOA,EAAc,EAAIA,EAAc,MAChD,qBAAGA,YAAiC,EAAI,OAAS,SAKnDrG,IAAOkC,MACWlC,IAAOD,MAOpBC,IAAOmC,KAInBmE,EAAepG,IAAOqG,GAAV,08BACL,qBAAG1E,IAAiB,OAAS,UAiI3B2E,MA7Ef,YAAyC,IAAhBzD,EAAe,EAAfA,YAAe,EACFnC,oBAAS,GADP,mBAC/B6F,EAD+B,KAClBC,EADkB,OAEV9F,mBAAS,IAFC,mBAE/B+F,EAF+B,KAEvBC,EAFuB,KAIhCC,EAAkB,SAACxD,GACnB,YAAIA,EAAEC,OAAOC,WAAWC,SAAS,oBACjCiD,GAAaC,GAAa,IAGhC1F,qBAAU,WAGR,OAFAgD,OAAOL,iBAAiB,QAASkD,GAE1B,WACL7C,OAAOJ,oBAAoB,QAASiD,OAIxC7F,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACoBC,MAAM,4DAAD,OACuC6B,IAFhE,cACQ5B,EADR,gBAIqBA,EAAI2F,OAJzB,OAIQzF,EAJR,OAMM0F,MAAMC,QAAQ3F,GAAOuF,EAAUvF,GAC9BuF,EAAU,IAPjB,4CADc,uBAAC,WAAD,wBAWdK,KACC,CAAClE,IAEJ,IAEMoC,EAAW,SAAC+B,GAChB,6BAAO,gCAAAjG,EAAA,6DACCkG,EAAOC,KAAKC,UAAU,CAAEH,UAASvG,OAAQoC,IAD1C,SAGa7B,MAChB,oEACA,CACEoG,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BJ,SARC,cAGChG,EAHD,gBAYcA,EAAI2F,OAZlB,OAYCzF,EAZD,OAaLuF,EAAUvF,GAbL,4CAiBHmG,EAAYb,EAAOc,KAAI,SAACvC,GAAD,OAC3B,oBAAoB5D,UAAU,kBAA9B,SACE,cAAC,EAAD,CAAc4D,MAAOA,EAAOE,KAAMrC,EAAaoC,SAAUA,KADlDD,EAAMM,QAKjB,OACE,qCACE,cAACW,EAAD,CAAqBrC,QA5BV,kBAAM4C,GAAcD,IA4BOJ,YAAaM,EAAOe,OAA1D,SACE,cAAC,IAAD,MAEF,eAACpB,EAAD,CACEzE,IAAK4E,EACL1E,GAAG,cACHT,UAAU,kBAHZ,UAKE,sBAAKA,UAAU,4BAAf,UACE,oBAAIA,UAAU,kBAAd,2BACA,mBAAGA,UAAU,kBAAb,sCAEDkG,S,QCxJMG,MARf,WACE,OACE,cAAC,IAAD,CAAM9D,GAAG,IAAT,SACE,cAAC,IAAD,O,QCKS+D,I,EAAAA,EARf,WACE,OACE,cAAC,IAAD,CAAM/D,GAAG,SAAT,SACE,cAAC,IAAD,OCGE9D,EAAuBC,IAAvBD,MAAOmC,EAAgBlC,IAAhBkC,MAAOE,EAASpC,IAAToC,KAEhByF,EAAY3H,IAAOC,IAAV,qvCAKCiC,EAELF,EAiBInC,EAiBAA,EAcAA,GAiDA+H,I,EAAAA,GA/Bf,SAAazD,GAAQ,IAEjB0D,EAME1D,EANF0D,aACAxH,EAKE8D,EALF9D,UACAwC,EAIEsB,EAJFtB,YACAgC,EAGEV,EAHFU,SACA7B,EAEEmB,EAFFnB,SACAC,EACEkB,EADFlB,IAOF,OACE,eAAC0E,EAAD,CAAWrF,MAAOjC,EAAlB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAYwE,SAAUA,IACtB,cAAC,EAAD,CAAehC,YAAaA,IAC5B,cAAC,EAAD,CACEA,YAAaA,EACbxC,UAAWA,EACX0C,gBAbN,WACE8E,GAAcxH,IAaV2C,SAAUA,EACVC,IAAKA,QC3GE6E,GAFI,yC,SCMXhG,GAAgDhC,IAAhDgC,KAAMK,GAA0CrC,IAA1CqC,UAAWC,GAA+BtC,IAA/BsC,eAAgBJ,GAAelC,IAAfkC,MAAOC,GAAQnC,IAARmC,IAE1C8F,GAAa/H,IAAOgI,KAAV,i/DAGH,qBAAGrG,IAAiB,OAAS,UAItB,qBAAGsG,WAA+B,MAAQ,SAmBpCnG,GAKEK,GAsBRA,GACLH,GAIOI,GAWMN,GAefG,GASAD,IAoBPS,GAAU,IAAIC,IAqHLwF,I,GAAAA,GAnHf,YAA4D,IAA/BvG,EAA8B,EAA9BA,IAAKwG,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,cAAiB,EAC/B1H,mBAAS,IADsB,mBAClD2H,EADkD,KAC3CC,EAD2C,OAE7B5H,mBAAS,IAFoB,mBAElD6H,EAFkD,KAExCC,EAFwC,OAGvB9H,mBAAS,IAHc,mBAGlD0E,EAHkD,KAGvCqD,EAHuC,OAIzB/H,mBAAS,IAJgB,mBAIlD2E,EAJkD,KAIxCqD,EAJwC,OAKzBhI,mBAAS,IALgB,mBAKlDiI,EALkD,KAKxCC,EALwC,OAMrBlI,oBAAS,GANY,mBAMlDuH,EANkD,KAMtCY,EANsC,KAanDC,EACM,KAAVT,GAA6B,KAAbE,GAAiC,KAAdnD,GAAiC,KAAbC,EAEnD0D,EAAqB,uCAAG,WAAO5F,GAAP,eAAApC,EAAA,yDAC5BoC,EAAE6F,kBAEEF,EAHwB,oDAIvBhB,GAAWmB,KAAKZ,GAJO,wDAM5BQ,GAAc,GAERK,EAAW,CAAE9D,YAAWC,WAAUgD,QAAOE,YARnB,SAUtBvH,MAAM,uDAAwD,CAClEoG,OAAQ,OACR+B,KAAM,OACN9B,QAAS,CAAE,eAAgB,oBAC3BJ,KAAMC,KAAKC,UAAU+B,KAEpBE,KANG,uCAME,WAAOnI,GAAP,mBAAAF,EAAA,sEACeE,EAAI2F,OADnB,OACEzF,EADF,OAEIkI,EAAgBlI,EAAhBkI,MAAOnE,EAAS/D,EAAT+D,KAEX/D,EAAKmI,OACPV,EAAYzH,EAAKoI,SACjBV,GAAc,KAEdT,EAAclD,GACdzC,GAAQoB,IAAI,QAASwF,GACrB5G,GAAQoB,IAAI,cAAeqB,IAVzB,2CANF,uDAmBHsE,OAAM,SAACC,GAAD,OAASC,QAAQJ,MAAMG,MA7BJ,2CAAH,sDA6C3B,OACE,eAAC1B,GAAD,CACEpG,IAAKA,EACLgI,SAAUZ,EACVd,WAAYA,EAHd,UAKE,uBACEzC,KAAK,OACLoE,YAAY,aACZC,SA5DwB,SAAC1G,GAAD,OAAOsF,EAAatF,EAAEC,OAAO0G,QA6DrDA,MAAO1E,EACP2E,UAAU,KACVC,UAAQ,IAEV,uBACExE,KAAK,OACLoE,YAAY,YACZC,SAnEuB,SAAC1G,GAAD,OAAOuF,EAAYvF,EAAEC,OAAO0G,QAoEnDA,MAAOzE,EACP0E,UAAU,KACVC,UAAQ,IAEV,uBACExE,KAAK,QACLoE,YAAY,QACZC,SA9EoB,SAAC1G,GAAD,OAAOmF,EAASnF,EAAEC,OAAO0G,QA+E7CA,MAAOzB,EACP0B,UAAU,MACVC,UAAQ,IAEV,uBACExE,KAAK,WACLqE,SApFmB,SAAC1G,GAAD,OAAOqF,EAAQrF,EAAEC,OAAO0G,QAqF3CF,YAAY,WACZK,UAAU,IACVF,UAAU,KACVD,MAAOvB,EACPyB,UAAQ,IAETrB,EACC,mBAAGvH,UAAU,WAAb,SAAyBuH,IAEzB,qBAAKvH,UAAU,cAEjB,sBAAKA,UAAU,OAAf,UACE,uBAAOoE,KAAK,SAASsE,MAAM,yBAC3B,qBAAK1I,UAAU,WACf,wBAAQwC,QApDO,WAPnB0E,EAAS,IACTE,EAAQ,IACRC,EAAa,IACbC,EAAY,IACZE,EAAY,IAKZT,KAkDI,uBAEF,cAAC,KAAD,CAASxG,IAAKsG,EAAY7G,UAAU,gBCnOlCY,GAAgDlC,IAAhDkC,MAAOF,GAAyChC,IAAzCgC,KAAMK,GAAmCrC,IAAnCqC,UAAWC,GAAwBtC,IAAxBsC,eAAgBH,GAAQnC,IAARmC,IAE1CiI,GAAalK,IAAOgI,KAAV,stDACH,qBAAGmC,UAA6B,OAAS,UAIlC,qBAAGlC,WAA+B,MAAQ,SAkBpCnG,GAKEK,GAsBRA,GACLH,GAIOI,GAWMN,IAQb,qBAAGsI,OAAuB,OAAS,SAErCnI,GAOAD,IAaPS,GAAU,IAAIC,IAyFL2H,I,MAAAA,GAvFf,YAAkC,IAAlBjC,EAAiB,EAAjBA,cAAiB,EACL1H,mBAAS,IADJ,mBACxB2H,EADwB,KACjBC,EADiB,OAEP5H,mBAAS,IAFF,mBAExB4J,EAFwB,KAElB9B,EAFkB,OAGM9H,oBAAS,GAHf,mBAGxB6J,EAHwB,KAGTC,EAHS,OAIJ9J,mBAAS,IAJL,mBAIxBiI,EAJwB,KAId8B,EAJc,OAKiB/J,oBAAS,GAL1B,mBAKxBgK,EALwB,KAKJC,EALI,OAMKjK,oBAAS,GANd,mBAMxBuH,EANwB,KAMZY,EANY,KAQzB+B,EAAuB,kBAAMD,GAAmBD,IAEhDG,EAAW,uCAAG,WAAO1H,GAAP,SAAApC,EAAA,yDAClBoC,EAAE6F,iBAEY,KAAVX,GAAyB,KAATiC,EAHF,wDAKlBzB,GAAc,GALI,SAOZ7H,MAAM,mDAAoD,CAC9DoG,OAAQ,OACR+B,KAAM,OACN9B,QAAS,CAAE,eAAgB,oBAC3BJ,KAAMC,KAAKC,UAAU,CAAEkB,QAAOiC,WAE7BlB,KANG,uCAME,WAAOnI,GAAP,uBAAAF,EAAA,yDACe,MAAfE,EAAI6J,OADJ,iCAEiB7J,EAAI2F,OAFrB,OAEIzF,EAFJ,OAGI4J,EAAM5J,EAAKmI,MACjBmB,EAAOM,GACPP,GAAY,GACZ3B,GAAc,GANZ,yCAQ4B5H,EAAI2F,OARhC,iBAQMyC,EARN,EAQMA,MAAOnE,EARb,EAQaA,KAEfsF,GAAY,GACZpC,EAAclD,GAEdzC,GAAQoB,IAAI,QAASwF,GACrB5G,GAAQoB,IAAI,cAAeqB,GAdzB,4CANF,uDAuBHsE,OAAM,SAACC,GAAD,OAASC,QAAQJ,MAAMG,MA9Bd,2CAAH,sDAoCjB,OACE,qCACE,eAACS,GAAD,CACEP,SAAUkB,EACVT,OAAQG,EACRJ,UAAWO,EACXzC,WAAYA,EAJd,UAME,uBACEzC,KAAK,QACLsE,MAAOzB,EACPuB,YAAY,QACZC,SAfkB,SAAC1G,GAAD,OAAOmF,EAASnF,EAAEC,OAAO0G,QAgB3CE,UAAQ,IAEV,uBACExE,KAAK,WACLsE,MAAOQ,EACPT,SApBiB,SAAC1G,GAAD,OAAOqF,EAAQrF,EAAEC,OAAO0G,QAqBzCF,YAAY,WACZK,UAAU,IACVF,UAAU,KACVC,UAAQ,IAEV,mBAAG5I,UAAU,QAAb,SAAsBuH,IACtB,sBAAKvH,UAAU,OAAf,UACE,uBAAOoE,KAAK,SAASsE,MAAM,WAC3B,qBAAK1I,UAAU,WACf,wBAAQwC,QAASgH,EAAjB,mCAEF,cAAC,KAAD,CAASjJ,IAAKsG,EAAY7G,UAAU,eAEtC,cAAC,GAAD,CACEO,IAAK+I,EACLvC,OAAQyC,EACRxC,cAAeA,QCvLfpG,GAA4BlC,IAA5BkC,MAAOnC,GAAqBC,IAArBD,MAAOsC,GAAcrC,IAAdqC,UAEhB6I,GAAYC,YAAH,kEAEGjJ,IAIZkJ,GAAkBlL,IAAOC,IAAV,4+BAOL+B,GAmBHG,GAQAtC,GAeEA,IAyCAsL,I,GAAAA,GA1Bf,YAAwC,IAAnB/G,EAAkB,EAAlBA,eACnB,OACE,qCACE,cAAC4G,GAAD,IACA,eAACE,GAAD,WACE,iCACE,2CACA,mFAEF,qBAAK9J,UAAU,OAAf,SACE,cAAC,GAAD,CAAMgH,cAAehE,MAEvB,qBAAKhD,UAAU,QAAf,SACE,mBACE4C,KAAK,yCACLZ,OAAO,SACPgI,IAAI,aAHN,SAKE,cAAC,IAAD,eCtFNC,GAAcC,gBAAK,kBAAM,oEACzBC,GAAUD,gBAAK,kBAAM,oEACrBE,GAAWF,gBAAK,kBAAM,6DACtBG,GAAQH,gBAAK,kBAAM,sDAEjBzL,GAA0CC,IAA1CD,MAAOiC,GAAmChC,IAAnCgC,KAAME,GAA6BlC,IAA7BkC,MAAOD,GAAsBjC,IAAtBiC,OAAQG,GAAcpC,IAAdoC,KAAMD,GAAQnC,IAARmC,IACpCyJ,GAAcT,YAAH,2yFAGC,qBAAG3I,MAAqBN,GAAQnC,MACrC,qBAAGyC,MAAqBzC,GAAQmC,MAI9B,qBAAGM,MAAqBzC,GAAQmC,MAG3B,qBAAGM,MAAqBN,GAAQF,MAIhC,qBAAGQ,MAAqB,UAAY,aAGpC,qBAAGA,MAAqBN,GAAQF,MACrC,qBAAGQ,MAAqBzC,GAAQmC,MACrB,qBAAGM,MAAqB,OAAS,UAIrC,qBAAGA,MAAqBR,GAAOE,KAK/BC,IAAM,qBAAGK,MAAqB,KAAO,QAIvC,qBAAGA,MAAqB,UAAY,aACzC,qBAAGA,MAAqBzC,GAAQmC,MAGhC,qBAAGM,MAAqBR,GAAOE,MAExB,qBAAGM,MAAqB,UAAY,aAI3C,qBAAGA,MAAqBzC,GAAQmC,MAGhC,qBAAGM,MAAqB,OAAS,UAGjC,qBAAGA,MAAqBR,GAAOE,MAC1B,qBAAGM,MAAqB,UAAY,aAGpC,qBAAGA,MAAqB,UAAY,aACzC,qBAAGA,MAAqBzC,GAAQmC,KAIhCA,IACK,qBAAGM,MAAqBJ,GAAOJ,MAI/B,qBAAGQ,MAAqB,UAAYR,MAC9B,qBAAGQ,MAAqBR,GAAOE,MAQrC,qBAAGM,MAAqB,UAAY,aAGpC,qBAAGA,MAAqBN,GAAQF,MAC1B,qBAAGQ,MAAqBR,GAAO,KAAOE,GAAQ,OAGlDE,GAIEA,IAAO,qBAAGI,MAAqB,KAAO,QAO/C,qBAAGA,MAAqBzC,GAAQmC,MAI3B,qBAAGM,MAAqB,UAAY,aAIpC,qBAAGA,MAAqBN,GAAQF,MACrC,qBAAGQ,MAAqBzC,GAAQmC,MACrB,qBAAGM,MAAqBR,GAAO,KAAOE,GAAQ,QAIpD,qBAAGM,MAAqB,UAAY,aAIzC,qBAAGA,MAAqBzC,GAAQmC,MAI3B,qBAAGM,MAAqBN,GAAQF,KAIrCE,IAMF,qBAAGM,MAAqBzC,GAAQmC,MAQ3B,qBAAGM,MAAqBJ,GAAOJ,KACpCE,IAIO,qBAAGM,MAAqBJ,GAAOH,MACpC,qBAAGO,MAAqBN,GAAQnC,MA8BzC4C,GAAU,IAAIC,IAgGLiJ,I,GAAAA,GA9Ff,WACElJ,GAAQoB,IAAI,QAASpB,GAAQmJ,IAAI,WAAY,GAC7C,IAAMC,EAAapJ,GAAQmJ,IAAI,eACzBE,EAAmC,SAAzBrJ,GAAQmJ,IAAI,SAHf,EAIqBlL,mBAASoL,GAJ9B,mBAINzL,EAJM,KAIKwH,EAJL,OAKyBnH,mBACrB,SAAfmL,EAAwB,KAAOA,GANpB,mBAKNhJ,EALM,KAKOuB,EALP,OAQS1D,mBAAS,MARlB,mBAQNuC,EARM,KAQD8I,EARC,OAS0BrL,oBAAS,GATnC,mBASNJ,EATM,KASOC,EATP,OAUeG,mBAAS,IAVxB,mBAUNsC,EAVM,KAUIgJ,EAVJ,KAWPC,EAAUC,iBAAO,MAuBvB,OAjBApL,qBAAU,WACR2B,GAAQoB,IAAI,QAASxD,KACpB,CAACA,IAEJS,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACoBC,MAAM,oDAAD,OAC+B6B,IAFxD,cACQ5B,EADR,gBAIqBA,EAAI2F,OAJzB,OAIQzF,EAJR,OAKE4K,EAAO5K,EAAKoE,iBACZyG,EAAQ,GAAD,OAAI7K,EAAKiE,UAAT,YAAsBjE,EAAKkE,WANpC,4CADc,sBAUVxC,GAVW,WAAD,wBAUGsJ,KAChB,CAACtJ,EAAavC,IAEZuC,EAGD,qCACE,cAAC6I,GAAD,CAAapJ,MAAOjC,EAAW6E,KAAMrC,IACrC,eAAC,IAAD,WACE,cAAC,GAAD,CACEgF,aAAcA,EACdxH,UAAWA,EACXwC,YAAaA,EACbgC,SA/BO,WACXoH,EAAQG,SAASH,EAAQG,QAAQC,SA+B7BrJ,SAAUA,EACVC,IAAKA,IAEP,cAAC,WAAD,CAAUqJ,SAAU,wBAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,cAACd,GAAD,CAAO5I,YAAaA,MAEtB,cAAC,IAAD,CAAO0J,KAAK,gBAAZ,SACE,qBAAKnL,UAAU,YAAf,SACE,cAACiK,GAAD,CACEvL,OAAQA,IACRO,UAAWA,EACXwC,YAAaA,EACbI,IAAKA,EACLgJ,QAASA,EACT3L,YAAaA,EACbC,gBAAiBA,QAIvB,cAAC,IAAD,CAAOgM,KAAK,WAAZ,SACE,qBAAKnL,UAAU,YAAf,SACE,cAACmK,GAAD,CACErG,KAAMrC,EACN/C,OAAQA,IACRO,UAAWA,EACX4C,IAAKA,EACLgJ,QAASA,EACT3L,YAAaA,EACbC,gBAAiBA,QAIvB,cAAC,IAAD,CAAOgM,KAAK,IAAZ,SACE,cAACf,GAAD,CACE3I,YAAaA,EACbxC,UAAWA,EACX4L,QAASA,EACThJ,IAAKA,iBAlDI,cAAC,GAAD,CAAWmB,eAAgBA,KCnNhDsH,GAAcT,YAAH,yPAgBjBuB,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,GAAD,IACA,cAAC,GAAD,OAEFnJ,SAASoJ,eAAe,W","file":"static/js/main.21d865e2.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport styled from \"styled-components\";\nimport colors from \"./../../colors\";\nconst { black } = colors;\n\nconst StyledProfile = styled.div`\n  max-width: fit-content;\n  max-height: ${({ size }) => size};\n  border-radius: 50%;\n  box-shadow: 0 0.4px 1.5px -3px ${({ lm, black }) => (lm ? black + \"33\" : \"transparent\")},\n    0 0.9px 3.6px -3px ${({ lm, black }) => (lm ? black + \"25\" : \"transparent\")},\n    0 1.8px 6.8px -3px ${({ lm, black }) => (lm ? black + \"22\" : \"transparent\")},\n    0 3.1px 12.1px -3px ${({ lm, black }) => (lm ? black + \"18\" : \"transparent\")},\n    0 5.8px 22.6px -3px ${({ lm, black }) => (lm ? black + \"14\" : \"transparent\")},\n    0 14px 54px -3px ${({ lm, black }) => (lm ? black + \"11\" : \"transparent\")};\n\n  .frame {\n    height: ${({ size }) => size};\n    width: ${({ size }) => size};\n    border-radius: 50%;\n    overflow: hidden;\n    background-color: #eee;\n  }\n  img {\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n  }\n`;\n\nfunction ProfilePicture({\n  size,\n  lightMode,\n  needsUpdate,\n  setUpdateStatus,\n  src,\n  userId,\n}) {\n  const [imgSrc, setSrc] = useState(null);\n  const fullSrc = \"https://frozen-thicket-71687.herokuapp.com/images/\" + src;\n\n  useEffect(() => {\n    if (needsUpdate) {\n      (async function fetchUpdatedUserInfo() {\n        const res = await fetch(\n          `https://frozen-thicket-71687.herokuapp.com/profiledata/${userId}`\n        );\n        const data = await res.text();\n\n        setSrc(\"https://frozen-thicket-71687.herokuapp.com/images/\" + data);\n        setUpdateStatus(false);\n      })();\n    }\n  }, [needsUpdate, userId, setUpdateStatus]);\n\n  return (\n    <StyledProfile lm={lightMode} black={black} size={size}>\n      <div className=\"frame\">\n        {!src && <Skeleton circle={true} height={size} width={size} />}\n        {src && <img src={imgSrc || fullSrc} alt=\"profile\" loading=\"lazy\" />}\n      </div>\n    </StyledProfile>\n  );\n}\n\nexport default ProfilePicture;\n","import styled from \"styled-components\";\nimport { CgSpinner } from \"react-icons/cg\";\n\nconst StyledSpinner = styled.div`\n  display: ${({ vis }) => (vis ? \"flex\" : \"none\")};\n\n  .spinner {\n    font-size: ${({ size }) => size || 20}px;\n    animation: spin 1s cubic-bezier(0.18, 0.89, 0.32, 1.28) infinite;\n  }\n\n  @keyframes spin {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nfunction Spinner({ size, vis }) {\n  return (\n    <StyledSpinner size={size} vis={vis}>\n      <CgSpinner className=\"spinner\" id=\"spinner\" />\n    </StyledSpinner>\n  );\n}\n\nexport default Spinner;\n","const colors = {\n  black: \"#222831\",\n  gray: \"#393e46\",\n  yellow: \"#ffd369\",\n  white: \"#eeeeee\",\n  red: \"#f05454\",\n  blue: \"#30475e\",\n  lightBlue: \"#338ae7\",\n  lightBlueHover: \"#3898fe\",\n};\n\nexport default colors;\n","import styled from \"styled-components\";\n\nconst StyledToggle = styled.div`\n  .toggle {\n    cursor: pointer;\n    position: relative;\n    height: 40px;\n    display: flex;\n    align-items: center;\n  }\n  .rail {\n    background: ${({ light, gray, white }) => (light ? gray : white)};\n    width: 35px;\n    height: 14px;\n    border-radius: 25px;\n    transition: background 0.4s ease 0s;\n    border: 1px solid ${({ white }) => white}22;\n  }\n  .ball {\n    background: ${({ light, gray, white }) => (light ? white : gray)};\n    height: 12px;\n    width: 12px;\n    border-radius: 50%;\n    border: 1px solid ${({ white }) => white}22;\n    // Box shadow prevents choppiness while transitioning\n    box-shadow: 0px 0px 0px transparent;\n    position: absolute;\n    top: 14px;\n    left: ${({ light }) => (light ? \"22px\" : \"1px\")};\n    transition: left 0.1s cubic-bezier(0.08, 0.82, 0.66, 1.2),\n      background 0.4s ease 0s;\n  }\n`;\n\nfunction Toggle({ colors, light }) {\n  const { gray, white } = colors;\n\n  return (\n    <StyledToggle gray={gray} white={white} light={light}>\n      <div className=\"toggle modal-component\">\n        <div className=\"rail modal-component\" />\n        <div className=\"ball modal-component\" />\n      </div>\n    </StyledToggle>\n  );\n}\n\nexport default Toggle;\n","import { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport ProfilePicture from \"./../../userProfile/profilePicture\";\nimport Toggle from \"./toggle\";\nimport { IoLogOutOutline } from \"react-icons/io5\";\nimport colors from \"./../../../colors\";\nimport Cookies from \"universal-cookie\";\nconst { black, gray, white } = colors;\n\nconst StyledSettings = styled.div`\n  display: ${({ vis }) => (vis ? \"grid\" : \"none\")};\n  position: fixed;\n  bottom: 55px;\n  right: 10px;\n  width: 300px;\n  background: ${({ light }) => (light ? white : gray)};\n  padding: 8px;\n  border: 1px solid ${({ light }) => (light ? black : white)}55;\n  border-radius: 8px;\n  color: ${({ light }) => (light ? black : white)};\n\n  a {\n    padding: 0;\n\n    &:hover {\n      color: ${({ light }) => (light ? black : white)};\n    }\n  }\n\n  .name-container {\n    display: flex;\n    padding: 8px;\n    border-radius: 8px;\n\n    .pfp {\n      margin-right: 10px;\n    }\n\n    h3 {\n      font-size: 16px;\n    }\n\n    p {\n      color: ${({ light }) => (light ? black : white + \"aa\")};\n      font-size: 14px;\n      font-weight: 400;\n    }\n\n    &-right {\n      display: grid;\n      gap: 5px;\n      align-content: space between;\n      align-self: center;\n      word-break: break-word;\n    }\n\n    &:hover,\n    &:active {\n      background: ${({ light }) => (light ? gray : white)}33;\n      color: ${({ light }) => (light ? black : white)};\n    }\n  }\n\n  .spacer {\n    height: 10px;\n    margin: 0 10px;\n    border-bottom: 1px solid ${({ light }) => (light ? black : white)}33;\n  }\n\n  ul li {\n    height: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: start;\n    font-size: 14px;\n    padding 0 8px;\n    border-radius: 8px;\n    margin-top: 5px;\n\n    .icon {\n      width: 50px;\n      display: flex;\n      justify-content: start;\n      font-size: 24px;\n    }\n\n    &:hover,\n    &:active {\n      background: ${({ light }) => (light ? gray : white)}33;\n      cursor: pointer;\n    }\n\n    .logout-icon {\n      font-size: 24px;\n    }\n  }\n`;\n\nconst cookies = new Cookies();\n\nfunction AccountSettings({\n  modalVis,\n  currentUser,\n  toggleVis,\n  light,\n  changeColorMode,\n  userName,\n  pfp,\n}) {\n  const toggleModalOff = (e) => {\n    if ([...e.target.classList].includes(\"modal-component\")) return;\n    if (modalVis) toggleVis();\n  };\n\n  useEffect(() => {\n    document.querySelector(\"body\").addEventListener(\"click\", toggleModalOff);\n\n    return () => {\n      document\n        .querySelector(\"body\")\n        .removeEventListener(\"click\", toggleModalOff);\n    };\n  });\n\n  const handleLogout = () => {\n    cookies.set(\"currentUser\", null);\n    cookies.set(\"token\", null);\n    window.location.href = window.location.origin + \"/facebookish\";\n  };\n\n  return (\n    <StyledSettings\n      vis={modalVis}\n      light={light}\n      id=\"settings-modal\"\n      className=\"modal-component\"\n    >\n      <Link\n        to=\"/profile\"\n        className=\"name-container modal-component\"\n        onClick={toggleVis}\n      >\n        <div className=\"pfp\">\n          <ProfilePicture src={pfp} userId={currentUser} size={\"60px\"} />\n        </div>\n        <div className=\"name-container-right modal-component\">\n          <h3>{userName}</h3>\n          <p>See your profile</p>\n        </div>\n      </Link>\n      <div className=\"spacer modal-component\" />\n      <ul className=\"modal-component\">\n        <li onClick={changeColorMode} className=\"modal-component\">\n          <div className=\"icon\">\n            <Toggle colors={colors} light={light} />\n          </div>\n          <p className=\"modal-component\">Toggle color mode</p>\n        </li>\n        <li onClick={handleLogout} className=\"logout modal-component\">\n          <div className=\"icon\">\n            <IoLogOutOutline />\n          </div>\n          <p>Logout</p>\n        </li>\n      </ul>\n    </StyledSettings>\n  );\n}\n\nexport default AccountSettings;\n","import { useState } from \"react\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport AccountSettings from \"./accountSettings\";\n\nfunction MainAccountSettings(props) {\n  const {\n    currentUser,\n    lightMode,\n    changeColorMode,\n    setCurrentUser,\n    userName,\n    pfp,\n  } = props;\n  const [settingsModalVis, setSettingsVis] = useState(false);\n\n  const toggleSettingsModal = () => setSettingsVis(!settingsModalVis);\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Tab\") return;\n    e.target.click();\n  };\n\n  return (\n    <>\n      <button\n        onKeyDown={handleKeyDown}\n        onClick={toggleSettingsModal}\n        tabIndex=\"0\"\n        className=\"settings\"\n      >\n        <BsThreeDots />\n      </button>\n      <AccountSettings\n        modalVis={settingsModalVis}\n        currentUser={currentUser}\n        toggleVis={toggleSettingsModal}\n        light={lightMode}\n        changeColorMode={changeColorMode}\n        setCurrentUser={setCurrentUser}\n        userName={userName}\n        pfp={pfp}\n      />\n    </>\n  );\n}\n\nexport default MainAccountSettings;\n","import { BsPlusSquareFill } from \"react-icons/bs\";\n\nfunction CreatePost({ focusRef }) {\n  return (\n    <button className=\"post-icon\" onClick={focusRef}>\n      <BsPlusSquareFill />\n    </button>\n  );\n}\n\nexport default CreatePost;\n","import styled from \"styled-components\";\nimport ProfilePicture from \"./../../userProfile/profilePicture\";\nimport moment from \"moment\";\n\nconst StyledNotification = styled.div`\n  display: flex;\n  padding: 8px;\n  padding-right: 31px;\n  border-radius: 8px;\n  cursor: pointer;\n\n  .notif-detail {\n    margin-left: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    letter-spacing: 0.5px;\n    line-height: 18px;\n  }\n`;\n\nfunction Notification({ notif, user, markRead }) {\n  const sender = notif.sender.firstName + \" \" + notif.sender.lastName;\n  const formatSentence = (type) => {\n    let [receiver, action] = type.split(\"/\");\n    let sentence;\n\n    switch (action) {\n      case \"add\":\n        sentence = \" sent you a friend request.\";\n        break;\n      case \"accept\":\n        sentence = \" accepted your friend request.\";\n        break;\n      case \"like\":\n        if (receiver === \"post\") sentence = \" liked your post.\";\n        if (receiver === \"comment\") sentence = \" liked your comment.\";\n        break;\n      case \"comment\":\n        if (receiver === \"post\") sentence = \" replied to your post.\";\n        if (receiver === \"comment\") sentence = \" replied to your comment.\";\n        break;\n      default:\n        break;\n    }\n\n    return sentence;\n  };\n\n  return (\n    <StyledNotification\n      id=\"notif-item\"\n      onClick={markRead(notif._id)}\n      className=\"modal-component\"\n    >\n      <ProfilePicture size={\"60px\"} src={notif.sender.profilePhotoSrc} />\n      <div className=\"notif-detail modal-component\">\n        <p className=\"modal-component\">\n          <b>{sender}</b>\n          {formatSentence(notif.notificationType)}\n        </p>\n        <p className=\"modal-component\">{moment(notif.createdAt).fromNow()}</p>\n      </div>\n    </StyledNotification>\n  );\n}\n\nexport default Notification;\n","import { IoNotifications } from \"react-icons/io5\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Notification from \"./notification\";\nimport colors from \"./../../../colors\";\n\nconst StyledNotifications = styled.button`\n  font-size: 24px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  position: relative;\n\n  &:hover,\n  &:active {\n    color: ${colors.black};\n    transition: color 50ms ease;\n  }\n\n  &::after {\n    content: \"${({ notifLength }) =>\n      notifLength > 9 ? \"9+\" : notifLength > 0 ? notifLength : \"\"}\";\n    display: ${({ notifLength }) => (notifLength > 0 ? \"flex\" : \"none\")};\n    align-items: center;\n    justify-content: center;\n    font-size: 12px;\n    font-weight: bold;\n    color: ${colors.white};\n    text-shadow: 1px 1px 1px ${colors.black};\n    position: absolute;\n    top: 0px;\n    right: 5px;\n    border-radius: 50%;\n    height: 15px;\n    width: 15px;\n    background: ${colors.red};\n  }\n`;\n\nconst StyledNotifs = styled.ul`\n  display: ${({ vis }) => (vis ? \"flex\" : \"none\")};\n  flex-direction: column;\n  list-style: none;\n  font-size: 14px;\n  font-weight: 400;\n  position: absolute;\n  bottom: 55px;\n  right: 15vw;\n  width: 75vw;\n  max-width: 360px;\n  max-height: 40vh;\n  overflow-y: scroll;\n  padding: 6px;\n  padding-bottom: 15px;\n  border-radius: 8px;\n  scrollbar-width: none;\n  box-shadow: 0 0px 0.8px rgba(0, 0, 0, 0.013), 0 0px 1.9px rgba(0, 0, 0, 0.032),\n    0 0px 3.9px rgba(0, 0, 0, 0.051), 0 0px 8px rgba(0, 0, 0, 0.066),\n    0 0px 22px rgba(0, 0, 0, 0.07);\n\n  &:hover,\n  &:active {\n    overflow: overlay;\n    scrollbar-width: auto;\n\n    #notif-item {\n      padding-right: 17px;\n    }\n  }\n\n  .notif-top {\n    margin-top: 10px;\n    margin-left: 8px;\n\n    h1 {\n      font-size: 1.7em;\n    }\n\n    p {\n      font-size: 12px;\n      margin-bottom: 18px;\n    }\n  }\n\n  @media (max-width: 540px) {\n    & {\n      width: 90vw;\n      right: 5vw;\n    }\n  }\n`;\n\nfunction Notifications({ currentUser }) {\n  const [notifsModal, setNotifsVis] = useState(false);\n  const [notifs, setNotifs] = useState([]);\n\n  const toggleOffNotifs = (e) => {\n    if ([...e.target.classList].includes(\"modal-component\")) return;\n    if (notifsModal) setNotifsVis(false);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"click\", toggleOffNotifs);\n\n    return () => {\n      window.removeEventListener(\"click\", toggleOffNotifs);\n    };\n  });\n\n  useEffect(() => {\n    async function fetchNotifications() {\n      const res = await fetch(\n        `https://frozen-thicket-71687.herokuapp.com/notifications/${currentUser}`\n      );\n      const data = await res.json();\n\n      if (Array.isArray(data)) setNotifs(data);\n      else setNotifs([]);\n    }\n\n    fetchNotifications();\n  }, [currentUser]);\n\n  const toggle = () => setNotifsVis(!notifsModal);\n\n  const markRead = (notifId) => {\n    return async () => {\n      const body = JSON.stringify({ notifId, userId: currentUser });\n\n      const res = await fetch(\n        \"https://frozen-thicket-71687.herokuapp.com/notifications/complete\",\n        {\n          method: \"put\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body,\n        }\n      );\n\n      const data = await res.json();\n      setNotifs(data);\n    };\n  };\n\n  const mapNotifs = notifs.map((notif) => (\n    <li key={notif._id} className=\"modal-component\">\n      <Notification notif={notif} user={currentUser} markRead={markRead} />\n    </li>\n  ));\n\n  return (\n    <>\n      <StyledNotifications onClick={toggle} notifLength={notifs.length}>\n        <IoNotifications />\n      </StyledNotifications>\n      <StyledNotifs\n        vis={notifsModal}\n        id=\"notif-modal\"\n        className=\"modal-component\"\n      >\n        <div className=\"notif-top modal-component\">\n          <h1 className=\"modal-component\">Notifications</h1>\n          <p className=\"modal-component\">click to mark as read</p>\n        </div>\n        {mapNotifs}\n      </StyledNotifs>\n    </>\n  );\n}\n\nexport default Notifications;\n","import { AiFillHome } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\n\nfunction HomeLink() {\n  return (\n    <Link to=\"/\">\n      <AiFillHome />\n    </Link>\n  );\n}\n\nexport default HomeLink;\n","import { ImUsers } from \"react-icons/im\";\nimport { Link } from \"react-router-dom\";\n\nfunction UsersLink() {\n  return (\n    <Link to=\"/users\">\n      <ImUsers />\n    </Link>\n  );\n}\n\nexport default UsersLink;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../../colors\";\nimport MainAccountSettings from \"./components/mainAccountSettings\";\nimport CreatePost from \"./components/createPost\";\nimport Notifications from \"./components/notifications\";\nimport HomeLink from \"./components/home\";\nimport UsersLink from \"./components/users\";\n\nconst { black, white, blue } = colors;\n\nconst StyledNav = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  height: 60px;\n  background: ${blue};\n  transition: background 0.4s ease, color 0.4s ease;\n  color: ${white};\n  font-weight: 600;\n  letter-spacing: 1.2px;\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  z-index: 10;\n\n  .post-icon {\n    display: flex;\n    align-items: center;\n    font-size: 24px;\n    cursor: pointer;\n    padding: 10px;\n\n    &:hover:not(.name-container),\n    &:active:not(.name-container) {\n      color: ${black};\n      transition: color 50ms ease;\n      font-weight: 600;\n    }\n  }\n\n  a,\n  a:visited {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n    text-decoration: none;\n    font-size: 24px;\n    color: inherit;\n\n    &:hover:not(.name-container),\n    &:active:not(.name-container) {\n      color: ${black};\n      transition: color 50ms ease;\n      font-weight: 600;\n    }\n  }\n\n  .notifs,\n  .settings {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n\n    &:hover,\n    &:active {\n      color: ${black};\n    }\n  }\n  .settings {\n    font-size: 28px;\n  }\n\n  .notifs {\n    font-size: 24px;\n  }\n\n  & button,\n  & button:hover,\n  & button:active {\n    background: none;\n  }\n`;\n\nfunction Nav(props) {\n  const {\n    setLightMode,\n    lightMode,\n    currentUser,\n    focusRef,\n    userName,\n    pfp,\n  } = props;\n\n  function changeColorMode() {\n    setLightMode(!lightMode);\n  }\n\n  return (\n    <StyledNav light={lightMode}>\n      <HomeLink />\n      <UsersLink />\n      <CreatePost focusRef={focusRef} />\n      <Notifications currentUser={currentUser} />\n      <MainAccountSettings\n        currentUser={currentUser}\n        lightMode={lightMode}\n        changeColorMode={changeColorMode}\n        userName={userName}\n        pfp={pfp}\n      />\n    </StyledNav>\n  );\n}\n\nexport default Nav;\n","const emailRegex = /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/;\n\nexport default emailRegex;\n","import styled from \"styled-components\";\nimport { useState } from \"react\";\nimport emailRegex from \"./../../utils/emailRegex\";\nimport colors from \"./../../colors\";\nimport Cookies from \"universal-cookie\";\nimport Spinner from \"./../spinner/spinner\";\nconst { gray, lightBlue, lightBlueHover, white, red } = colors;\n\nconst StyledForm = styled.form`\n  position: absolute;\n  top: 0px;\n  display: ${({ vis }) => (vis ? \"grid\" : \"none\")};\n  gap: 18px;\n  width: 300px;\n  padding: 18px;\n  padding-bottom: ${({ spinnerVis }) => (spinnerVis ? \"0px\" : \"18px\")};\n  margin: 0 auto;\n  background: #fff;\n  border-radius: 8px;\n  position: relative;\n  box-shadow: 0 0px 1.1px rgba(0, 0, 0, 0.019),\n    0 0.2px 3.5px rgba(0, 0, 0, 0.027), 0 1px 7.5px rgba(0, 0, 0, 0.033),\n    0 3px 13.5px rgba(0, 0, 0, 0.041), 0 5px 20px rgba(0, 0, 0, 0.06);\n\n  input {\n    height: 50px;\n    font-size: 16px;\n    border-radius: 8px;\n\n    &[type=\"email\"],\n    &[type=\"password\"],\n    &[type=\"text\"] {\n      padding-left: 15px;\n      padding-right: 7px;\n      border: 1px solid ${gray}33;\n      outline: none;\n\n      &:focus,\n      &:active {\n        border: 2px solid ${lightBlue};\n        box-shadow: 0 0 0 2px #e7f3ff;\n      }\n    }\n  }\n\n  input:valid:not(input[type=\"submit\"]) {\n    border: 1px solid #43df36;\n    box-shadow: 0 0 2px #43df36;\n  }\n\n  .btns {\n    width: 100%;\n\n    & > * {\n      width: 100%;\n      flex: 1;\n      padding: 12px;\n      border-style: none;\n      border-radius: 8px;\n      font-size: 18px;\n      font-weight: bold;\n      background: ${lightBlue};\n      color: ${white};\n\n      &:hover:not(.spacer),\n      &:active:not(.spacer) {\n        background: ${lightBlueHover};\n        cursor: pointer;\n      }\n    }\n\n    button {\n      height: 50px;\n    }\n  }\n\n  .spacer {\n    border-top: 1px solid ${gray}33;\n    border-radius: 0;\n    margin-top: 24px;\n    width: 100%;\n    background: none;\n  }\n\n  .err-empty {\n    display: none;\n  }\n  .err-text {\n    position: absolute;\n    bottom: 238px;\n    left: 27px;\n    text-align: start;\n    color: ${red};\n    font-size: 12px;\n    animation: appear 0.3s ease;\n  }\n\n  .spinner {\n    position: absolute;\n    bottom: 132px;\n    left: 30px;\n    color: ${white};\n  }\n\n  @keyframes appear {\n    from {\n      opacity: 0;\n      left: 0;\n    }\n  }\n\n  @media (min-width: 540px) {\n    & {\n      width: 400px;\n    }\n    .spinner {\n      left: 77px;\n    }\n  }\n`;\n\nconst cookies = new Cookies();\n\nfunction CreateAccountForm({ vis, toggle, setActiveUser }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPass] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [spinnerVis, setSpinnerVis] = useState(false);\n\n  const handleEmailChange = (e) => setEmail(e.target.value);\n  const handlePassChange = (e) => setPass(e.target.value);\n  const handleFirstNameChange = (e) => setFirstName(e.target.value);\n  const handleLastNameChange = (e) => setLastName(e.target.value);\n\n  const fieldsEmpty =\n    email === \"\" || password === \"\" || firstName === \"\" || lastName === \"\";\n\n  const handleAccountCreation = async (e) => {\n    e.preventDefault();\n\n    if (fieldsEmpty) return;\n    if (!emailRegex.test(email)) return;\n\n    setSpinnerVis(true);\n\n    const userData = { firstName, lastName, email, password };\n\n    await fetch(\"https://frozen-thicket-71687.herokuapp.com/users/new\", {\n      method: \"post\",\n      mode: \"cors\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(userData),\n    })\n      .then(async (res) => {\n        const data = await res.json();\n        const { token, user } = data;\n\n        if (data.error) {\n          setErrorMsg(data.message);\n          setSpinnerVis(false);\n        } else {\n          setActiveUser(user);\n          cookies.set(\"token\", token);\n          cookies.set(\"currentUser\", user);\n        }\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const clearFields = () => {\n    setEmail(\"\");\n    setPass(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setErrorMsg(\"\");\n  };\n\n  const handleCancel = () => {\n    clearFields();\n    toggle();\n  };\n\n  return (\n    <StyledForm\n      vis={vis}\n      onSubmit={handleAccountCreation}\n      spinnerVis={spinnerVis}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"First Name\"\n        onChange={handleFirstNameChange}\n        value={firstName}\n        maxLength=\"50\"\n        required\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Last Name\"\n        onChange={handleLastNameChange}\n        value={lastName}\n        maxLength=\"50\"\n        required\n      />\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        onChange={handleEmailChange}\n        value={email}\n        maxLength=\"100\"\n        required\n      />\n      <input\n        type=\"password\"\n        onChange={handlePassChange}\n        placeholder=\"Password\"\n        minLength=\"8\"\n        maxLength=\"50\"\n        value={password}\n        required\n      />\n      {errorMsg ? (\n        <p className=\"err-text\">{errorMsg}</p>\n      ) : (\n        <div className=\"err-empty\" />\n      )}\n      <div className=\"btns\">\n        <input type=\"submit\" value=\"Create Your Account!\" />\n        <div className=\"spacer\" />\n        <button onClick={handleCancel}>Cancel</button>\n      </div>\n      <Spinner vis={spinnerVis} className=\"spinner\" />\n    </StyledForm>\n  );\n}\n\nexport default CreateAccountForm;\n","import styled from \"styled-components\";\nimport { useState } from \"react\";\nimport CreateAccountForm from \"./createAccount\";\nimport colors from \"./../../colors\";\nimport Cookies from \"universal-cookie\";\nimport Spinner from \"./../spinner/spinner\";\nconst { white, gray, lightBlue, lightBlueHover, red } = colors;\n\nconst StlyedForm = styled.form`\n  display: ${({ createVis }) => (createVis ? \"none\" : \"grid\")};\n  gap: 18px;\n  width: 300px;\n  padding: 18px;\n  padding-bottom: ${({ spinnerVis }) => (spinnerVis ? \"0px\" : \"18px\")};\n  margin: 0 auto;\n  background: #fff;\n  border-radius: 8px;\n  position: relative;\n  box-shadow: 0 0px 1.1px rgba(0, 0, 0, 0.019),\n    0 0.2px 3.5px rgba(0, 0, 0, 0.027), 0 1px 7.5px rgba(0, 0, 0, 0.033),\n    0 3px 13.5px rgba(0, 0, 0, 0.041), 0 5px 20px rgba(0, 0, 0, 0.06);\n\n  input {\n    height: 50px;\n    font-size: 16px;\n    border-radius: 8px;\n\n    &[type=\"email\"],\n    &[type=\"password\"] {\n      padding-left: 15px;\n      padding-right: 7px;\n      border: 1px solid ${gray}33;\n      outline: none;\n\n      &:focus,\n      &:active {\n        border: 2px solid ${lightBlue};\n        box-shadow: 0 0 0 2px #e7f3ff;\n      }\n    }\n  }\n\n  input:valid:not(input[type=\"submit\"]) {\n    border: 1px solid #43df36;\n    box-shadow: 0 0 2px #43df36;\n  }\n\n  .btns {\n    width: 100%;\n\n    & > * {\n      width: 100%;\n      flex: 1;\n      padding: 12px;\n      border-style: none;\n      border-radius: 8px;\n      font-size: 18px;\n      font-weight: bold;\n      background: ${lightBlue};\n      color: ${white};\n\n      &:hover:not(.spacer),\n      &:active:not(.spacer) {\n        background: ${lightBlueHover};\n        cursor: pointer;\n      }\n    }\n\n    button {\n      height: 50px;\n    }\n  }\n\n  .spacer {\n    border-top: 1px solid ${gray}33;\n    border-radius: 0;\n    margin-top: 24px;\n    width: 100%;\n    background: none;\n  }\n\n  .error {\n    display: ${({ errVis }) => (errVis ? \"flex\" : \"none\")};\n    font-size: 14px;\n    color: ${red};\n  }\n\n  .spinner {\n    position: absolute;\n    bottom: 132px;\n    left: 90px;\n    color: ${white};\n  }\n\n  @media (min-width: 540px) {\n    & {\n      width: 400px;\n    }\n    .spinner {\n      left: 140px;\n    }\n  }\n`;\n\nconst cookies = new Cookies();\n\nfunction Form({ setActiveUser }) {\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [errorModalVis, setErrorVis] = useState(false);\n  const [errorMsg, setMsg] = useState(\"\");\n  const [accountCreationVis, setAccCreationVis] = useState(false);\n  const [spinnerVis, setSpinnerVis] = useState(false);\n\n  const toggleAccountCreator = () => setAccCreationVis(!accountCreationVis);\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    if (email === \"\" || pass === \"\") return;\n\n    setSpinnerVis(true);\n\n    await fetch(\"https://frozen-thicket-71687.herokuapp.com/login\", {\n      method: \"post\",\n      mode: \"cors\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ email, pass }),\n    })\n      .then(async (res) => {\n        if (res.status === 401) {\n          const data = await res.json();\n          const msg = data.error;\n          setMsg(msg);\n          setErrorVis(true);\n          setSpinnerVis(false);\n        } else {\n          const { token, user } = await res.json();\n\n          setErrorVis(false);\n          setActiveUser(user);\n\n          cookies.set(\"token\", token);\n          cookies.set(\"currentUser\", user);\n        }\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const handleEmailChange = (e) => setEmail(e.target.value);\n  const handlePassChange = (e) => setPass(e.target.value);\n\n  return (\n    <>\n      <StlyedForm\n        onSubmit={handleLogin}\n        errVis={errorModalVis}\n        createVis={accountCreationVis}\n        spinnerVis={spinnerVis}\n      >\n        <input\n          type=\"email\"\n          value={email}\n          placeholder=\"Email\"\n          onChange={handleEmailChange}\n          required\n        />\n        <input\n          type=\"password\"\n          value={pass}\n          onChange={handlePassChange}\n          placeholder=\"Password\"\n          minLength=\"8\"\n          maxLength=\"50\"\n          required\n        />\n        <p className=\"error\">{errorMsg}</p>\n        <div className=\"btns\">\n          <input type=\"submit\" value=\"Log In\" />\n          <div className=\"spacer\" />\n          <button onClick={toggleAccountCreator}>Create New Account</button>\n        </div>\n        <Spinner vis={spinnerVis} className=\"spinner\" />\n      </StlyedForm>\n      <CreateAccountForm\n        vis={accountCreationVis}\n        toggle={toggleAccountCreator}\n        setActiveUser={setActiveUser}\n      />\n    </>\n  );\n}\n\nexport default Form;\n","import styled, { createGlobalStyle } from \"styled-components\";\nimport Form from \"./form\";\nimport colors from \"./../../colors\";\nimport { AiFillGithub } from \"react-icons/ai\";\nconst { white, black, lightBlue } = colors;\n\nconst LoginBody = createGlobalStyle`\n  body {\n    background: ${white};\n  }\n`;\n\nconst StyledLoginPage = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  align-content: flex-start;\n  align-items: start;\n  justify-content: center;\n  height: 100%;\n  background: ${white};\n  text-align: center;\n  padding-top: 30px;\n  position: relative;\n\n  span {\n    flex: 1;\n    flex-basis: 768px;\n    height: 200px;\n    margin-top: 0;\n  }\n\n  .form {\n    flex: 2;\n    flex-basis: 400px;\n  }\n\n  h1 {\n    font-family: \"Ubuntu\", sans-serif;\n    color: ${lightBlue};\n    font-size: 3em;\n    padding-top: 30px;\n  }\n\n  h3 {\n    font-family: \"Ubuntu\", sans-serif;\n    font-weight: 400;\n    color: ${black};\n    font-size: 1.4em;\n    line-height: 34px;\n    padding-left: 40px;\n    padding-right: 40px;\n    margin-top: 20px;\n  }\n\n  .links {\n    position: fixed;\n    bottom: 4px;\n    left: 12px;\n    font-size: 32px;\n\n    a {\n      color: ${black};\n    }\n  }\n\n  @media (min-width: 1167px) {\n    & {\n      padding-top: 150px;\n    }\n\n    span {\n      margin-top: 40px;\n    }\n  }\n`;\n\nfunction LoginPage({ setCurrentUser }) {\n  return (\n    <>\n      <LoginBody />\n      <StyledLoginPage>\n        <span>\n          <h1>facespace</h1>\n          <h3>personalize your space and connect with others</h3>\n        </span>\n        <div className=\"form\">\n          <Form setActiveUser={setCurrentUser} />\n        </div>\n        <div className=\"links\">\n          <a\n            href=\"https://github.com/nsars19/facebookish\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <AiFillGithub />\n          </a>\n        </div>\n      </StyledLoginPage>\n    </>\n  );\n}\n\nexport default LoginPage;\n","import React, { useState, useEffect, useRef, lazy, Suspense } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport colors from \"./colors\";\nimport Nav from \"./components/nav/nav\";\nimport Cookies from \"universal-cookie\";\nimport { createGlobalStyle } from \"styled-components\";\nimport LoginPage from \"./components/login/login\";\n\nconst UserProfile = lazy(() => import(\"./components/userProfile/UserProfile\"));\nconst Profile = lazy(() => import(\"./components/profile/profile\"));\nconst HomePage = lazy(() => import(\"./components/homepage/homepage\"));\nconst Users = lazy(() => import(\"./components/users/Users\"));\n\nconst { black, gray, white, yellow, blue, red } = colors;\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin-bottom: 50px;\n    background: ${({ light }) => (light ? white : black)};\n    color: ${({ light }) => (light ? black : white)};\n\n    a,\n    a:visited {\n      color: ${({ light }) => (light ? black : white)};\n    }\n    div.postItem {\n      background: ${({ light }) => (light ? white : gray)};\n    }\n    div.comment-body,\n    div.sub-comment-body {\n      background: ${({ light }) => (light ? \"#d8d8d8\" : \"#707070\")}\n    }\n    ul.menu {\n      background: ${({ light }) => (light ? white : gray)};\n      color: ${({ light }) => (light ? black : white)};\n      border: 1px solid ${({ light }) => (light ? \"#aaa\" : \"#444\")};\n\n      li .content:hover,\n      li .content:active {\n        background: ${({ light }) => (light ? gray : white)}33;\n      }\n\n      li .content.del:hover,\n      li .content.del:active {\n        background: ${red}${({ light }) => (light ? \"cc\" : \"aa\")};\n      }\n    }\n    #comment-input {\n      background: ${({ light }) => (light ? \"#d8d8d8\" : \"#707070\")};\n      color: ${({ light }) => (light ? black : white)};\n    }\n    #comment-submit {\n      color: ${({ light }) => (light ? gray : white)};\n      &:hover {\n        background: ${({ light }) => (light ? \"#d8d8d8\" : \"#707070\")}\n      }\n    }\n    button.util {\n      color: ${({ light }) => (light ? black : white)}aa;\n    }\n    #comment-util button{\n      color: ${({ light }) => (light ? \"#777\" : \"#aaa\")};\n    }\n    #comment-likes {\n      color: ${({ light }) => (light ? gray : white)};\n      background: ${({ light }) => (light ? \"#cacaca\" : \"#707070\")}\n    }\n    #edit-form {\n      background: ${({ light }) => (light ? \"#d8d8d8\" : \"#707070\")};\n      color: ${({ light }) => (light ? black : white)};\n    }\n    #pending:hover,\n    #pending:active {\n      color: ${white};\n      background: ${({ light }) => (light ? blue : gray)};\n      cursor: auto;\n    }\n    #prof-card {\n      background: ${({ light }) => (light ? \"#d8d8d8\" : gray)};\n      border: 1px solid ${({ light }) => (light ? gray : white)}33;\n    }\n\n    input[type=\"text\"]:hover {\n      opacity: 70%;\n    }\n\n    #esc {\n      background: ${({ light }) => (light ? \"#d8d8d8\" : \"#707070\")};\n    }\n    #img-form {\n      background: ${({ light }) => (light ? white : gray)};\n      border: 1px solid ${({ light }) => (light ? gray + \"33\" : white + \"22\")};\n      \n      input:not(input[type=\"text\"]) {\n        background: ${blue};\n\n        &:hover,\n        &:active {\n          background: ${blue}${({ light }) => (light ? \"cc\" : \"88\")};\n          color: #eee;\n        }\n      }\n    }\n\n    #post-icon-text {\n      color: ${({ light }) => (light ? black : white)}aa;\n    }\n\n    input#img-text-input {\n      background: ${({ light }) => (light ? \"#d8d8d8\" : \"#707070\")};\n    }\n\n    #notif-modal {\n      background: ${({ light }) => (light ? white : gray)};\n      color: ${({ light }) => (light ? black : white)};\n      border: 1px solid ${({ light }) => (light ? gray + \"55\" : white + \"55\")};\n    }\n    #notif-item:hover,\n    #notif-item:active {\n      background: ${({ light }) => (light ? \"#d8d8d8\" : \"#707070\")};\n    }\n\n    div.post-comments {\n      color: ${({ light }) => (light ? black : white)}cc;\n    }\n\n    #post-loader {\n      background: ${({ light }) => (light ? white : gray)};\n    }\n\n    #spinner {\n      color: ${white};\n    }\n\n  }\n\n  ::placeholder {\n    color: ${({ light }) => (light ? black : white)};\n  }\n\n  button,\n  input[type=\"submit\"] {\n    padding: 8px;\n    border-style: none;\n    border-radius: 5px;\n    background: ${({ light }) => (light ? blue : gray)};\n    color: ${white};\n\n    &:hover,\n    &:active {\n      background: ${({ light }) => (light ? blue : yellow)}cc;\n      color: ${({ light }) => (light ? white : black)};\n    }\n  }\n\n  @media (min-width: 1024px) {\n    .grid-wrap {\n      display: grid;\n      grid-template-areas:\n        \"head head head head head head head head\"\n        \"list form form form .... .... .... ....\"\n        \"list feed feed feed .... .... .... ....\"\n        \".... feed feed feed .... .... .... ....\";\n    }\n\n    .grid-prof-head {\n      grid-area: head;\n    }\n    .grid-friend-list {\n      grid-area: list;\n      grid-auto-flow: row;\n    }\n    .grid-feed {\n      grid-area: feed;\n    }\n    .grid-status-form {\n      grid-area: form;\n    }\n  }\n`;\n\nconst cookies = new Cookies();\n\nfunction App() {\n  cookies.set(\"light\", cookies.get(\"light\") || true);\n  const userCookie = cookies.get(\"currentUser\");\n  const isLight = cookies.get(\"light\") === \"true\" ? true : false;\n  const [lightMode, setLightMode] = useState(isLight);\n  const [currentUser, setCurrentUser] = useState(\n    userCookie === \"null\" ? null : userCookie\n  );\n  const [pfp, setPfp] = useState(null);\n  const [needsUpdate, setUpdateStatus] = useState(false);\n  const [userName, setName] = useState(\"\");\n  const postRef = useRef(null);\n\n  const focusRef = () => {\n    if (postRef.current) postRef.current.focus();\n  };\n\n  useEffect(() => {\n    cookies.set(\"light\", lightMode);\n  }, [lightMode]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const res = await fetch(\n        `https://frozen-thicket-71687.herokuapp.com/users/${currentUser}`\n      );\n      const data = await res.json();\n      setPfp(data.profilePhotoSrc);\n      setName(`${data.firstName} ${data.lastName}`);\n    }\n\n    if (currentUser) fetchData();\n  }, [currentUser, needsUpdate]);\n\n  if (!currentUser) return <LoginPage setCurrentUser={setCurrentUser} />;\n  else\n    return (\n      <>\n        <GlobalStyle light={lightMode} user={currentUser} />\n        <Router>\n          <Nav\n            setLightMode={setLightMode}\n            lightMode={lightMode}\n            currentUser={currentUser}\n            focusRef={focusRef}\n            userName={userName}\n            pfp={pfp}\n          />\n          <Suspense fallback={<div></div>}>\n            <Switch>\n              <Route path=\"/users\">\n                <Users currentUser={currentUser} />\n              </Route>\n              <Route path=\"/user/:userId\">\n                <div className=\"grid-wrap\">\n                  <UserProfile\n                    colors={colors}\n                    lightMode={lightMode}\n                    currentUser={currentUser}\n                    pfp={pfp}\n                    postRef={postRef}\n                    needsUpdate={needsUpdate}\n                    setUpdateStatus={setUpdateStatus}\n                  />\n                </div>\n              </Route>\n              <Route path=\"/profile\">\n                <div className=\"grid-wrap\">\n                  <Profile\n                    user={currentUser}\n                    colors={colors}\n                    lightMode={lightMode}\n                    pfp={pfp}\n                    postRef={postRef}\n                    needsUpdate={needsUpdate}\n                    setUpdateStatus={setUpdateStatus}\n                  />\n                </div>\n              </Route>\n              <Route path=\"/\">\n                <HomePage\n                  currentUser={currentUser}\n                  lightMode={lightMode}\n                  postRef={postRef}\n                  pfp={pfp}\n                />\n              </Route>\n            </Switch>\n          </Suspense>\n        </Router>\n      </>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *::before,\n  *::after {       \n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n    font-family: Arial, sans-serif;\n  }\n    \n  a.user {\n    text-decoration: none;\n    font-weight: 600;\n  }\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}