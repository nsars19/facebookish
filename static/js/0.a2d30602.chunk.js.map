{"version":3,"sources":["utils/compressImage.js","utils/getCommentCount.js","components/modals/settingsModal.js","components/post/likeAction.js","components/post/commentUtils.js","components/post/likeDisplay.js","components/post/commentMetrics.js","components/commentForm/subCommentForm.js","components/post/editForm.js","components/post/subComment.js","components/post/comment.js","components/commentForm/commentForm.js","components/post/postUtils.js","components/post/postMetrics.js","components/post/post.js","components/loader/postLoader.js","components/feed/feed.js","components/homepage/statusForm/postIcons.js","components/homepage/statusForm/form.js","components/homepage/statusForm/statusForm.js","components/imageHandler/imageHandler.js","components/imageHandler/imageHandlerModal.js"],"names":["opts","maxSizeMB","maxWidthOrHeight","compressImage","image","a","imageCompression","newImg","lastModifiedDate","Date","now","fileName","name","file","File","getCommentCount","postComments","reduce","total","current","comments","length","StyledModal","styled","div","vis","spinnerVis","cookies","Cookies","SettingsModal","props","modalVisible","isPost","postItem","commentItem","toggleModal","setFeed","homeFeed","user","postAuthor","setCommentCount","togglePostEdit","toggleCommentEditStatus","useState","setSpinnerVis","token","get","toggleSettingsOff","refreshFeed","fetch","response","json","data","reqBody","JSON","stringify","postId","_id","method","headers","Authorization","body","then","catch","err","console","error","e","post","parentId","commentId","reqBodyData","res","useEffect","window","addEventListener","removeEventListener","className","onClick","deletePost","deleteComment","StyledAction","button","LikeAction","comment","setLikeCount","likeCount","likes","com","StyledCommentUtils","CommentUtils","focusRef","id","StyledLike","isCmt","LikeDisplay","StyledCommentMetrics","CommentMetrics","StyledForm","form","colors","white","SubCommentForm","subFormVis","toggleVis","inputRef","currentUser","pfp","preventDefault","input","target","text","value","bodyData","author","requestBody","type","commentRes","commentData","onSubmit","to","src","size","userId","ref","placeholder","StyledEditForm","EditForm","setPostText","postText","setCommentText","commentText","handleEditSubmit","newData","firstElementChild","defaultValue","StyledComment","SubComment","setModalVisible","setSubFormVis","editingComment","setCommentEditStatus","commentAuthor","firstName","lastName","isAuthor","subCommentRef","useRef","profilePhotoSrc","focus","Comment","map","subComment","CommentForm","setCommentsVisible","StyledUtils","PostUtils","StyledMetrics","commentCount","PostMetrics","toggleComments","StyledPost","cmtsVis","Post","commentsVisible","editingPost","setPostEditStatus","img","setImg","photo","key","moment","createdAt","fromNow","alt","loading","StyledLoader","PostLoader","color","highlightColor","circle","height","width","count","StyledFeed","loader","Feed","posts","setPosts","visibilePosts","setVisiblePosts","dataLength","next","hasMore","slice","PostIcons","toggleImgModal","Form","handleSubmit","handleInputChange","postRef","onChange","StyledStatusForm","lm","g","w","StatusForm","lightMode","fromProfile","setText","modalVis","setImgModalVis","black","gray","red","yellow","formData","blur","r","y","b","textIsEmpty","toggle","postInput","StyledHandler","blue","imgError","ImageHandler","toggleOff","profile","setUpdateStatus","imgFile","setImage","setSrc","setImgError","compressedImg","FormData","append","endPoint","url","clearHandler","encType","accept","files","URL","createObjectURL","htmlFor","disabled","ImageHandlerModal","toggleModalOff","tagName","classList","includes"],"mappings":"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","file":"static/js/0.a2d30602.chunk.js","sourcesContent":["import imageCompression from \"browser-image-compression\";\n\nconst opts = {\n  maxSizeMB: 6,\n  maxWidthOrHeight: 1080,\n};\n\nexport default async function compressImage(image) {\n  const newImg = await imageCompression(image, opts);\n  newImg.lastModifiedDate = Date.now();\n  newImg.fileName = image.name;\n\n  const file = new File([newImg], image.name);\n  return file;\n}\n","export default function getCommentCount(postComments) {\n  if (!postComments) return 1;\n\n  return postComments.reduce((total, current) => {\n    return total + (1 + current.comments?.length);\n  }, 0);\n}\n","import styled from \"styled-components\";\nimport getCommentCount from \"./../../utils/getCommentCount\";\nimport { AiFillEdit } from \"react-icons/ai\";\nimport { RiChatDeleteFill } from \"react-icons/ri\";\nimport Cookies from \"universal-cookie\";\nimport Spinner from \"./../spinner/spinner\";\nimport { useEffect, useState } from \"react\";\n\nconst StyledModal = styled.div`\n  display: ${({ vis }) => (vis ? \"flex\" : \"none\")};\n  color: ${({ vis }) => (vis ? \"red\" : \"blue\")};\n  position: absolute;\n  top: 0;\n  right: 10px;\n  color: black;\n  margin-right: 20px;\n  z-index: 3;\n\n  ul {\n    list-style: none;\n    border-radius: 6px;\n    z-index: 2;\n    box-shadow: 0 0.3px 0.9px rgba(0, 0, 0, 0.073),\n      0 0.9px 2.3px rgba(0, 0, 0, 0.106), 0 1.8px 4.8px rgba(0, 0, 0, 0.124),\n      0 3.7px 9.9px rgba(0, 0, 0, 0.139), 0 10px 27px rgba(0, 0, 0, 0.19);\n  }\n  li {\n    display: flex;\n    align-items: center;\n    padding: 5px;\n\n    svg {\n      font-size: 18px;\n    }\n    &:first-child {\n      border-radius: 6px 6px 0 0;\n    }\n\n    &:last-child {\n      border-radius: 0 0 6px 6px;\n    }\n\n    button {\n      border-style: none;\n      background: transparent;\n      color: inherit;\n      font-weight: bold;\n      font-size: 14px;\n    }\n  }\n\n  li.spacer {\n    border-bottom: 1px solid gray;\n    height: 0;\n    padding: 0;\n    margin: 0 5px;\n  }\n\n  li .content {\n    display: flex;\n    align-items: center;\n    padding: 6px;\n    width: 100%;\n    border-radius: 6px;\n  }\n\n  li .content.del {\n    margin-top: 0;\n  }\n\n  .icon {\n    display: ${({ spinnerVis }) => (spinnerVis ? \"none\" : \"flex\")};\n  }\n`;\n\nconst cookies = new Cookies();\n\nfunction SettingsModal(props) {\n  const {\n    modalVisible,\n    isPost,\n    postItem,\n    commentItem,\n    toggleModal,\n    setFeed,\n    homeFeed,\n    user,\n    postAuthor,\n    setCommentCount,\n    togglePostEdit,\n    toggleCommentEditStatus,\n  } = props;\n\n  const [spinnerVis, setSpinnerVis] = useState(false);\n  const token = cookies.get(\"token\");\n\n  const toggleSettingsOff = () => {\n    if (modalVisible) toggleModal();\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"click\", toggleSettingsOff);\n\n    return () => {\n      window.removeEventListener(\"click\", toggleSettingsOff);\n    };\n  });\n\n  async function refreshFeed() {\n    let response;\n    if (homeFeed) {\n      response = await fetch(\n        `https://frozen-thicket-71687.herokuapp.com/posts/feed/${user}`\n      );\n    } else {\n      response = await fetch(\n        `https://frozen-thicket-71687.herokuapp.com/posts/byuser/${postAuthor}`\n      );\n    }\n    const data = await response.json();\n    toggleModal();\n    setFeed(data);\n  }\n\n  async function deletePost() {\n    const reqBody = JSON.stringify({ postId: postItem._id });\n\n    await fetch(`https://frozen-thicket-71687.herokuapp.com/posts/delete`, {\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: reqBody,\n    })\n      .then(() => {\n        setSpinnerVis(false);\n        toggleModal();\n      })\n      .catch((err) => console.error(err));\n\n    refreshFeed();\n  }\n\n  async function deleteComment(e) {\n    const [post, commentId, parentId] = [\n      commentItem.post,\n      commentItem._id,\n      commentItem.parentId,\n    ];\n    const reqBodyData = parentId\n      ? { post, commentId, parentId }\n      : { post, commentId };\n    const reqBody = JSON.stringify(reqBodyData);\n    const res = await fetch(\n      \"https://frozen-thicket-71687.herokuapp.com/comments/delete\",\n      {\n        method: \"delete\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: reqBody,\n      }\n    ).catch((err) => console.error(err));\n\n    const data = await res.json();\n\n    setCommentCount(getCommentCount(data.comments));\n    refreshFeed();\n  }\n\n  return (\n    <StyledModal vis={modalVisible} spinnerVis={spinnerVis}>\n      <ul className=\"menu\">\n        <li\n          onClick={() => {\n            isPost ? togglePostEdit() : toggleCommentEditStatus();\n            toggleModal();\n          }}\n        >\n          <div className=\"content\">\n            <AiFillEdit />\n            <button>Edit {isPost ? \"post\" : \"comment\"}</button>\n          </div>\n        </li>\n        <li className=\"spacer\" />\n        <li\n          onClick={(e) => {\n            setSpinnerVis(true);\n            isPost ? deletePost() : deleteComment(e);\n          }}\n        >\n          <div className=\"content del\">\n            <RiChatDeleteFill className=\"icon\" />\n            <Spinner className=\"spinner\" vis={spinnerVis} />\n            <button>Delete {isPost ? \"post\" : \"comment\"}</button>\n          </div>\n        </li>\n      </ul>\n    </StyledModal>\n  );\n}\n\nexport default SettingsModal;\n","import styled from \"styled-components\";\n\nconst StyledAction = styled.button`\n  font-weight: bold;\n  font-size: 14px;\n`;\n\nfunction LikeAction({ user, post, comment, setLikeCount }) {\n  async function processLike() {\n    const body = post\n      ? JSON.stringify({ user, post })\n      : JSON.stringify({ user, comment });\n\n    const res = await fetch(\n      `https://frozen-thicket-71687.herokuapp.com/likes/like-${\n        post ? \"post\" : \"comment\"\n      }`,\n      {\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body,\n      }\n    );\n\n    const data = await res.json();\n    const likeCount = data.likes.length;\n    setLikeCount(likeCount);\n  }\n\n  return (\n    <StyledAction onClick={processLike} com={comment} className=\"util\">\n      Like\n    </StyledAction>\n  );\n}\n\nexport default LikeAction;\n","import LikeAction from \"./likeAction\";\nimport styled from \"styled-components\";\n\nconst StyledCommentUtils = styled.div`\n  display: flex;\n\n  button {\n    padding: 0;\n    margin-left: 15px;\n    margin-top: 3px;\n    background: none;\n    font-size: 12px;\n    display: flex;\n    align-items: center;\n\n    &::after {\n      content: \"\";\n      display: inline-block;\n      margin: 0 5px;\n      height: 1px;\n      width: 2px;\n      background: #707070;\n      border-radius: 50%;\n    }\n    &:hover,\n    &:active {\n      background: none;\n      color: inherit;\n      text-decoration: underline;\n    }\n  }\n\n  button.reply {\n    margin: 0;\n    margin-top: 3px;\n    font-size: 12px;\n    font-weight: bold;\n    &::after {\n      display: none;\n    }\n  }\n\n  button.util:hover,\n  button.reply:hover {\n    cursor: pointer;\n  }\n`;\n\nfunction CommentUtils({ comment, user, setLikeCount, focusRef }) {\n  return (\n    <StyledCommentUtils id=\"comment-util\">\n      <LikeAction user={user} setLikeCount={setLikeCount} comment={comment} />\n      <button className=\"reply\" onClick={focusRef}>\n        Reply\n      </button>\n    </StyledCommentUtils>\n  );\n}\n\nexport default CommentUtils;\n","import styled from \"styled-components\";\nimport { AiFillLike } from \"react-icons/ai\";\n\nconst StyledLike = styled.div`\n  position: ${({ isCmt }) => (isCmt ? \"absolute\" : \"static\")};\n  bottom: -12px;\n  right: 0;\n  display: grid;\n  grid-auto-flow: column;\n  align-items: center;\n  background: ${({ isCmt }) => (isCmt ? \"#393e46\" : \"none\")};\n  padding: ${({ isCmt }) => (isCmt ? \"3px\" : \"\")};\n  padding-right: 5px;\n  border-radius: 15px;\n  box-shadow: ${({ isCmt }) =>\n    isCmt\n      ? \"0 0.3px 1.3px rgba(0, 0, 0, 0.31), 0 0.8px 3.5px rgba(0, 0, 0, 0.202), 0 1.8px 8.4px rgba(0, 0, 0, 0.155),0 6px 28px rgba(0, 0, 0, 0.108)\"\n      : \"none\"};\n\n  .like {\n    path {\n      color: #338ae7;\n    }\n    margin-bottom: 2px;\n    margin-right: 5px;\n    margin-left: 1px;\n  }\n`;\n\nfunction LikeDisplay({ likeCount, isCmt, id }) {\n  return (\n    <StyledLike isCmt={isCmt} className={isCmt ? \"cmt\" : \"\"} id={id}>\n      <AiFillLike className=\"like\" />\n      <p>{likeCount}</p>\n    </StyledLike>\n  );\n}\n\nexport default LikeDisplay;\n","import LikeDisplay from \"./likeDisplay\";\nimport styled from \"styled-components\";\n\nconst StyledCommentMetrics = styled.div`\n  .cmt {\n    font-size: 12px;\n  }\n`;\n\nfunction CommentMetrics({ likeCount }) {\n  return (\n    <StyledCommentMetrics>\n      <LikeDisplay likeCount={likeCount} isCmt={true} id={\"comment-likes\"} />\n    </StyledCommentMetrics>\n  );\n}\n\nexport default CommentMetrics;\n","import styled from \"styled-components\";\nimport colors from \"./../../colors\";\nimport ProfilePicture from \"./../userProfile/profilePicture\";\nimport { Link } from \"react-router-dom\";\nimport getCommentCount from \"./../../utils/getCommentCount\";\nimport Cookies from \"universal-cookie\";\n\nconst StyledForm = styled.form`\n  opacity: ${({ vis }) => (vis ? \"100%\" : \"0\")};\n  height: ${({ vis }) => (vis ? \"fit-content\" : \"0\")};\n  .wrap {\n    margin-top: ${({ vis }) => (vis ? \"10px\" : \"0px\")};\n    margin-left: 15px;\n    display: flex;\n    justify-content: space-between;\n  }\n\n  a {\n    align-self: center;\n  }\n  input[type=\"text\"] {\n    flex: 1;\n    height: 35px;\n    width: 170px;\n    padding-left: 10px;\n    border-style: none;\n    border-radius: 18px;\n    background: #707070;\n    color: ${colors.white};\n    font-size: 14px;\n    margin: 0 10px;\n  }\n\n  input[type=\"submit\"] {\n    background: none;\n    font-weight: bold;\n  }\n\n  p {\n    width: max-content;\n    font-size: 12px;\n    padding-top: 3px;\n    padding-left: 55px;\n  }\n`;\n\nconst cookies = new Cookies();\n\nfunction SubCommentForm({\n  subFormVis,\n  toggleVis,\n  postId,\n  commentId,\n  setFeed,\n  homeFeed,\n  postAuthor,\n  inputRef,\n  currentUser,\n  setCommentCount,\n  parentId,\n  pfp,\n}) {\n  const token = cookies.get(\"token\");\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    const input = e.target[0];\n    const text = input.value;\n    // Prevent sending empty comments\n    if (!text) return;\n\n    const bodyData = {\n      text,\n      parentId,\n      post: postId,\n      comment: commentId,\n      author: currentUser,\n    };\n    const requestBody = JSON.stringify(bodyData);\n\n    const commentRes = await fetch(\n      `https://frozen-thicket-71687.herokuapp.com/comments/child/new`,\n      {\n        method: \"POST\",\n        type: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: requestBody,\n      }\n    ).catch((err) => console.error(err));\n\n    const commentData = await commentRes.json();\n\n    let response;\n    if (homeFeed) {\n      response = await fetch(\n        `https://frozen-thicket-71687.herokuapp.com/posts/feed/${currentUser}`\n      );\n    } else {\n      response = await fetch(\n        `https://frozen-thicket-71687.herokuapp.com/posts/byuser/${postAuthor}`\n      );\n    }\n    const data = await response.json();\n    setFeed(data);\n    setCommentCount(getCommentCount(commentData.comments));\n    toggleVis();\n    input.value = \"\";\n  }\n\n  return (\n    <StyledForm onSubmit={handleSubmit} vis={subFormVis}>\n      <div className=\"wrap\">\n        <Link to=\"/profile\">\n          <ProfilePicture src={pfp} size={\"25px\"} userId={currentUser} />\n        </Link>\n        <input\n          type=\"text\"\n          ref={inputRef}\n          id=\"comment-input\"\n          placeholder=\"Write a comment...\"\n        />\n      </div>\n      <p>Press enter to comment</p>\n    </StyledForm>\n  );\n}\n\nexport default SubCommentForm;\n","import styled from \"styled-components\";\nimport colors from \"./../../colors\";\n\nconst StyledEditForm = styled.form`\n  width: 100%;\n  margin-left: 10px;\n  padding-right: 10px;\n  input[type=\"text\"] {\n    width: 97%;\n    flex: 1;\n    height: 35px;\n    padding-left: 10px;\n    padding-right: 10px;\n    border-style: none;\n    border-radius: 18px;\n    background: #707070;\n    color: ${colors.white};\n    font-size: 14px;\n  }\n  p {\n    font-size: 12px;\n    margin-top: 5px;\n  }\n  input.comment-input {\n    margin-top: 5px;\n    border: 1px solid #a0a0a0;\n  }\n`;\n\nfunction EditForm(props) {\n  const {\n    setPostText,\n    postText,\n    togglePostEdit,\n    postId,\n    isPost,\n    setCommentText,\n    commentText,\n    toggleCommentEditStatus,\n    commentId,\n  } = props;\n\n  const setText = (text) => (isPost ? setPostText(text) : setCommentText(text));\n  const toggleEditForm = () =>\n    isPost ? togglePostEdit() : toggleCommentEditStatus();\n\n  const handleEditSubmit = async (e) => {\n    e.preventDefault();\n\n    const newData = e.target.firstElementChild.value;\n    const bodyData = isPost ? { postId, newData } : { commentId, newData };\n    const body = JSON.stringify(bodyData);\n\n    const res = await fetch(\n      `https://frozen-thicket-71687.herokuapp.com/${\n        isPost ? \"posts\" : \"comments\"\n      }/update`,\n      {\n        method: \"put\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body,\n      }\n    );\n\n    const data = await res.json();\n\n    setText(data.text);\n    toggleEditForm();\n  };\n\n  return (\n    <StyledEditForm onSubmit={handleEditSubmit}>\n      <input\n        type=\"text\"\n        className={isPost ? \"post-input\" : \"comment-input\"}\n        defaultValue={isPost ? postText : commentText}\n        id=\"edit-form\"\n      />\n      <p>Press enter to submit.</p>\n    </StyledEditForm>\n  );\n}\n\nexport default EditForm;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport Settings from \"./../modals/settingsModal\";\nimport { useState, useRef } from \"react\";\nimport ProfilePicture from \"./../userProfile/profilePicture\";\nimport CommentUtils from \"./commentUtils\";\nimport CommentMetrics from \"./commentMetrics\";\nimport SubCommentForm from \"./../commentForm/subCommentForm\";\nimport EditForm from \"./editForm\";\n\nconst StyledComment = styled.div`\n  padding: 5px;\n  padding-right: 15px;\n  margin-left: 25px;\n  position: relative;\n  display: grid;\n  grid-template-columns: 35px auto;\n  grid-template-rows: 1fr auto;\n  column-gap: 10px;\n\n  .pfp-link {\n    height: 100%;\n    grid-column: 1 / 2;\n    grid-row: 1 / -1;\n  }\n\n  .sub-comment-body {\n    position: relative;\n    min-width: 200px;\n    max-width: fit-content;\n    padding: 8px 14px;\n    border-radius: 20px;\n\n    a.user {\n      font-size: 14px;\n    }\n    p.content {\n      font-size: 15px;\n      padding-top: 2px;\n    }\n  }\n\n  & a,\n  & p {\n    grid-column: 2 / 3;\n  }\n\n  .comment-settings {\n    position: absolute;\n    top: 5px;\n    right: 10px;\n    cursor: pointer;\n    font-size: 18px;\n\n    &:hover {\n      color: #777;\n    }\n  }\n\n  &:hover .comment-settings {\n    display: block;\n  }\n\n  @media (min-width: 1280px) {\n    .comment-settings {\n      display: none;\n    }\n  }\n`;\n\nfunction SubComment({\n  comment,\n  currentUser,\n  setFeed,\n  homeFeed,\n  postAuthor,\n  setCommentCount,\n  pfp,\n}) {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [likeCount, setLikeCount] = useState(comment.likes.length);\n  const [subFormVis, setSubFormVis] = useState(false);\n  const [editingComment, setCommentEditStatus] = useState(false);\n  const [commentText, setCommentText] = useState(comment.text);\n  const commentAuthor =\n    comment.author.firstName + \" \" + comment.author.lastName;\n  const isAuthor = comment.author._id === currentUser;\n  const subCommentRef = useRef(null);\n\n  function focusSubCommentForm() {\n    subCommentRef.current.focus();\n    setSubFormVis(!subFormVis);\n  }\n\n  function toggleModalVisibility() {\n    setModalVisible(!modalVisible);\n  }\n\n  const toggleCommentEditStatus = () => setCommentEditStatus(!editingComment);\n\n  const EditComponent = () => {\n    return (\n      <EditForm\n        setCommentText={setCommentText}\n        commentText={commentText}\n        commentId={comment._id}\n        toggleCommentEditStatus={toggleCommentEditStatus}\n      />\n    );\n  };\n\n  const postContent = () => <p className=\"content\">{commentText}</p>;\n\n  return (\n    <StyledComment>\n      <div className=\"pfp-link\">\n        <Link to={`/user/${comment.author._id}`} className=\"user\">\n          <ProfilePicture\n            src={comment.author.profilePhotoSrc}\n            userId={currentUser}\n            size={\"35px\"}\n          />\n        </Link>\n      </div>\n      <div className=\"sub-comment-body\">\n        <Link to={`/user/${comment.author._id}`} className=\"user\">\n          {commentAuthor}\n        </Link>\n        {editingComment ? EditComponent() : postContent()}\n        {isAuthor ? (\n          <BsThreeDots\n            className=\"comment-settings\"\n            onClick={toggleModalVisibility}\n          />\n        ) : (\n          <div />\n        )}\n        <Settings\n          modalVisible={modalVisible}\n          toggleModal={setModalVisible}\n          commentItem={comment}\n          setFeed={setFeed}\n          homeFeed={homeFeed}\n          user={currentUser}\n          postAuthor={postAuthor}\n          setCommentCount={setCommentCount}\n          toggleCommentEditStatus={toggleCommentEditStatus}\n        />\n        {likeCount > 0 ? <CommentMetrics likeCount={likeCount} /> : <div />}\n      </div>\n      <CommentUtils\n        comment={comment._id}\n        user={currentUser}\n        setLikeCount={setLikeCount}\n        focusRef={focusSubCommentForm}\n      />\n      <SubCommentForm\n        currentUser={currentUser}\n        subFormVis={subFormVis}\n        toggleVis={setSubFormVis}\n        inputRef={subCommentRef}\n        postId={comment.post}\n        commentId={comment._id}\n        parentId={comment.parentId}\n        setFeed={setFeed}\n        homeFeed={homeFeed}\n        postAuthor={postAuthor}\n        setCommentCount={setCommentCount}\n        src={comment.author.profilePhotoSrc}\n        pfp={pfp}\n      />\n    </StyledComment>\n  );\n}\n\nexport default SubComment;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport Settings from \"./../modals/settingsModal\";\nimport { useState, useRef } from \"react\";\nimport ProfilePicture from \"./../userProfile/profilePicture\";\nimport CommentUtils from \"./commentUtils\";\nimport CommentMetrics from \"./commentMetrics\";\nimport SubCommentForm from \"./../commentForm/subCommentForm\";\nimport SubComment from \"./subComment\";\nimport EditForm from \"./editForm\";\n\nconst StyledComment = styled.div`\n  padding: 0 5px;\n  margin-left: 10px;\n  margin-right: 10px;\n  position: relative;\n  display: grid;\n  grid-template-columns: 35px auto;\n  grid-template-rows: 1fr auto;\n  column-gap: 10px;\n\n  &:first-child {\n    margin-top: 10px;\n  }\n\n  .pfp-link {\n    height: 100%;\n    grid-column: 1 / 2;\n    grid-row: 1 / -1;\n  }\n\n  .comment-body {\n    position: relative;\n    min-width: 250px;\n    max-width: fit-content;\n    padding: 8px 14px;\n    border-radius: 20px;\n\n    a.user {\n      font-size: 14px;\n    }\n    p.content {\n      font-size: 15px;\n      padding-top: 2px;\n    }\n  }\n\n  & a,\n  & p {\n    grid-column: 2 / 3;\n  }\n\n  .comment-settings {\n    position: absolute;\n    top: 5px;\n    right: 10px;\n    cursor: pointer;\n    font-size: 18px;\n\n    &:hover {\n      color: #777;\n    }\n  }\n\n  &:hover .comment-settings {\n    display: block;\n  }\n\n  @media (min-width: 1280px) {\n    .comment-settings {\n      display: none;\n    }\n  }\n\n  .sub-comments {\n    margin-top: ${({ subFormVis }) => (subFormVis ? \"50px\" : \"0\")};\n    margin-left: -20px;\n  }\n`;\n\nfunction Comment({\n  comment,\n  currentUser,\n  setFeed,\n  homeFeed,\n  postAuthor,\n  setCommentCount,\n  pfp,\n}) {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [likeCount, setLikeCount] = useState(comment.likes.length);\n  const [subFormVis, setSubFormVis] = useState(false);\n  const [editingComment, setCommentEditStatus] = useState(false);\n  const [commentText, setCommentText] = useState(comment.text);\n  const commentAuthor =\n    comment.author.firstName + \" \" + comment.author.lastName;\n  const isAuthor = comment.author._id === currentUser;\n  const subCommentRef = useRef(null);\n\n  function focusSubCommentForm() {\n    subCommentRef.current.focus();\n    setSubFormVis(!subFormVis);\n  }\n\n  function toggleModalVisibility() {\n    setModalVisible(!modalVisible);\n  }\n\n  const toggleCommentEditStatus = () => setCommentEditStatus(!editingComment);\n\n  const EditComponent = () => {\n    return (\n      <EditForm\n        setCommentText={setCommentText}\n        commentText={commentText}\n        commentId={comment._id}\n        toggleCommentEditStatus={toggleCommentEditStatus}\n      />\n    );\n  };\n\n  const postContent = () => <p className=\"content\">{commentText}</p>;\n\n  return (\n    <>\n      <StyledComment className=\"comment\" subFormVis={subFormVis}>\n        <div className=\"pfp-link\">\n          <Link to={`/user/${comment.author._id}`} className=\"user\">\n            <ProfilePicture\n              src={comment.author.profilePhotoSrc}\n              userId={comment.author._id}\n              size={\"35px\"}\n            />\n          </Link>\n        </div>\n        <div className=\"comment-body\">\n          <Link to={`/user/${comment.author._id}`} className=\"user\">\n            {commentAuthor}\n          </Link>\n          {editingComment ? EditComponent() : postContent()}\n          {isAuthor ? (\n            <BsThreeDots\n              className=\"comment-settings\"\n              onClick={toggleModalVisibility}\n            />\n          ) : (\n            <div />\n          )}\n          <Settings\n            modalVisible={modalVisible}\n            toggleModal={setModalVisible}\n            commentItem={comment}\n            setFeed={setFeed}\n            homeFeed={homeFeed}\n            user={currentUser}\n            postAuthor={postAuthor}\n            setCommentCount={setCommentCount}\n            toggleCommentEditStatus={toggleCommentEditStatus}\n          />\n          {likeCount > 0 ? <CommentMetrics likeCount={likeCount} /> : <div />}\n        </div>\n        <CommentUtils\n          comment={comment._id}\n          user={currentUser}\n          setLikeCount={setLikeCount}\n          focusRef={focusSubCommentForm}\n        />\n        <SubCommentForm\n          currentUser={currentUser}\n          subFormVis={subFormVis}\n          toggleVis={setSubFormVis}\n          inputRef={subCommentRef}\n          postId={comment.post}\n          commentId={comment._id}\n          parentId={comment._id}\n          setFeed={setFeed}\n          homeFeed={homeFeed}\n          postAuthor={postAuthor}\n          setCommentCount={setCommentCount}\n          pfp={pfp}\n        />\n      </StyledComment>\n      <div className=\"sub-comments\">\n        {comment.comments.map((subComment) => (\n          <div key={subComment._id} className=\"sub-comment\">\n            <SubComment\n              postAuthor={postAuthor}\n              comment={subComment}\n              parentId={subComment.parentId}\n              currentUser={currentUser}\n              setFeed={setFeed}\n              homeFeed={homeFeed}\n              setCommentCount={setCommentCount}\n              pfp={pfp}\n            />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default Comment;\n","import styled from \"styled-components\";\nimport colors from \"./../../colors\";\nimport ProfilePicture from \"./../userProfile/profilePicture\";\nimport { Link } from \"react-router-dom\";\nimport getCommentCount from \"./../../utils/getCommentCount\";\nimport Cookies from \"universal-cookie\";\n\nconst StyledForm = styled.form`\n  margin: 0 10px;\n  padding-bottom: 10px;\n\n  .wrap {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 10px;\n    margin-left: 5px;\n  }\n\n  input[type=\"text\"] {\n    flex: 1;\n    height: 35px;\n    padding-left: 10px;\n    padding-right: 10px;\n    border-style: none;\n    border-radius: 18px;\n    background: #707070;\n    color: ${colors.white};\n    font-size: 14px;\n    margin: 0 10px;\n    z-index: 2;\n  }\n\n  input[type=\"submit\"] {\n    background: none;\n    font-weight: bold;\n  }\n\n  p {\n    font-size: 12px;\n    padding-top: 3px;\n    padding-left: 55px;\n  }\n`;\n\nconst cookies = new Cookies();\n\nfunction CommentForm({\n  postId,\n  setFeed,\n  homeFeed,\n  postAuthor,\n  inputRef,\n  currentUser,\n  setCommentCount,\n  setCommentsVisible,\n  src,\n  pfp,\n}) {\n  const token = cookies.get(\"token\");\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    const input = e.target[0];\n    const text = input.value;\n    // Prevent sending empty comments\n    if (!text) return;\n\n    const bodyData = {\n      text,\n      post: postId,\n      author: currentUser,\n    };\n    const requestBody = JSON.stringify(bodyData);\n\n    const commentRes = await fetch(\n      `https://frozen-thicket-71687.herokuapp.com/comments/new`,\n      {\n        method: \"POST\",\n        type: \"cors\",\n        body: requestBody,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    ).catch((err) => console.error(err));\n\n    const commentData = await commentRes.json();\n\n    let response;\n    if (homeFeed) {\n      response = await fetch(\n        `https://frozen-thicket-71687.herokuapp.com/posts/feed/${currentUser}`\n      );\n    } else {\n      response = await fetch(\n        `https://frozen-thicket-71687.herokuapp.com/posts/byuser/${postAuthor}`\n      );\n    }\n    const data = await response.json();\n    setFeed(data);\n    setCommentCount(getCommentCount(commentData.comments));\n    setCommentsVisible();\n    input.value = \"\";\n  }\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <div className=\"wrap\">\n        <Link to=\"/profile\">\n          <ProfilePicture size={\"35px\"} src={pfp} userId={currentUser} />\n        </Link>\n        <input\n          type=\"text\"\n          ref={inputRef}\n          id=\"comment-input\"\n          placeholder=\"Write a comment...\"\n        />\n      </div>\n      <p>Press enter to comment</p>\n    </StyledForm>\n  );\n}\n\nexport default CommentForm;\n","import styled from \"styled-components\";\nimport LikeAction from \"./likeAction\";\n\nconst StyledUtils = styled.div`\n  display: grid;\n  justify-items: stretch;\n  grid-auto-flow: column;\n  column-gap: 4px;\n  border-bottom: 1px solid gray;\n  border-top: 1px solid gray;\n  padding: 4px 0;\n  margin-left: 10px;\n  margin-right: 10px;\n  & button {\n    font-weight: bold;\n    font-size: 14px;\n  }\n\n  button.util {\n    background: none;\n    &:hover,\n    &:active {\n      background: #707070aa;\n    }\n  }\n`;\n\nfunction PostUtils({ user, post, setLikeCount, focusRef }) {\n  return (\n    <StyledUtils>\n      <LikeAction user={user} post={post} setLikeCount={setLikeCount} />\n      <button onClick={focusRef} className=\"util\">\n        Comment\n      </button>\n    </StyledUtils>\n  );\n}\n\nexport default PostUtils;\n","import LikeDisplay from \"./likeDisplay\";\nimport styled from \"styled-components\";\n\nconst StyledMetrics = styled.div`\n  font-size: 15px;\n  display: flex;\n  padding: 0 10px;\n  margin-top: 5px;\n\n  .likes,\n  .post-comments {\n    margin-top: 5px;\n    flex: 1;\n    display: flex;\n  }\n  .likes {\n    justify-content: start;\n  }\n  .post-comments {\n    display: ${({ commentCount }) => (commentCount ? \"flex\" : \"none\")};\n    justify-content: flex-end;\n    -webkit-justify-content: flex-end;\n    margin-right: 4px;\n\n    &:hover {\n      text-decoration: underline;\n      cursor: pointer;\n    }\n  }\n`;\n\nfunction PostMetrics({ likeCount, commentCount, toggleComments }) {\n  return (\n    <StyledMetrics commentCount={commentCount}>\n      <div className=\"likes\">\n        {likeCount > 0 ? <LikeDisplay likeCount={likeCount} /> : <div />}\n      </div>\n      <div className=\"post-comments\" onClick={toggleComments}>\n        {commentCount === 1 ? (\n          commentCount + \" Comment\"\n        ) : commentCount > 0 ? (\n          commentCount + \" Comments\"\n        ) : (\n          <div />\n        )}\n      </div>\n    </StyledMetrics>\n  );\n}\n\nexport default PostMetrics;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport Comment from \"./comment\";\nimport CommentForm from \"./../commentForm/commentForm\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport Settings from \"./../modals/settingsModal\";\nimport { useState, useRef, useEffect } from \"react\";\nimport ProfilePicture from \"./../userProfile/profilePicture\";\nimport moment from \"moment\";\nimport PostUtils from \"./postUtils\";\nimport PostMetrics from \"./postMetrics\";\nimport getCommentCount from \"./../../utils/getCommentCount\";\nimport EditForm from \"./editForm\";\n\nconst StyledPost = styled.div`\n  width: 100%;\n  border-radius: 5px;\n  margin: 20px 0px;\n  box-shadow: 0 0.1px 0.8px rgba(0, 0, 0, 0.02),\n    0 0.1px 1.9px rgba(0, 0, 0, 0.028), 0 0.3px 3.5px rgba(0, 0, 0, 0.035),\n    0 0.4px 6.3px rgba(0, 0, 0, 0.042), 0 0.8px 11.7px rgba(0, 0, 0, 0.05);\n\n  &:hover {\n    transition: box-shadow 0.05s ease;\n    box-shadow: 0 -0.4px 1.1px rgba(0, 0, 0, 0.047),\n      0 -0.7px 2.5px rgba(0, 0, 0, 0.063), 0 -0.9px 4.5px rgba(0, 0, 0, 0.067),\n      0 -0.8px 7.4px rgba(0, 0, 0, 0.067), 0 0.4px 12.2px rgba(0, 0, 0, 0.066);\n  }\n\n  .user-info {\n    display: grid;\n    grid-template-columns: 60px auto;\n    grid-template-rows: 15px auto;\n    row-gap: 10px;\n    padding: 6px 5px 0px;\n    margin-bottom: 10px;\n\n    p {\n      font-size: 13px;\n      font-weight: bold;\n      color: #aaa;\n    }\n\n    a,\n    p {\n      width: fit-content;\n    }\n\n    a:hover {\n      text-decoration: underline;\n    }\n  }\n\n  .post {\n    position: relative;\n    padding: 5px 0;\n    padding-bottom: 10px;\n    position: relative;\n\n    .pfp-link {\n      grid-column: 1 / 2;\n      grid-row: 1 / -1;\n      justify-self: center;\n      align-self: center;\n    }\n\n    p.content {\n      margin-left: 10px;\n      line-height: 23px;\n      font-size: 15px;\n    }\n  }\n\n  .post-settings {\n    position: absolute;\n    top: 6px;\n    right: 10px;\n    cursor: pointer;\n    font-size: 24px;\n\n    &:hover {\n      color: #777;\n    }\n  }\n\n  .post:hover .post-settings {\n    display: block;\n  }\n\n  .comments {\n    display: ${({ cmtsVis }) => (cmtsVis ? \"block\" : \"none\")};\n  }\n\n  .photo-wrap {\n    width: 100%;\n    margin-top: 5px;\n    display: flex;\n    justify-content: center;\n\n    img {\n      width: 100%;\n    }\n  }\n\n  @media (min-width: 300px) {\n    .post-settings {\n      display: block;\n    }\n  }\n\n  @media (min-width: 1280px) {\n    .post-settings {\n      display: none;\n    }\n  }\n`;\n\nfunction Post({ post, setFeed, homeFeed, src, currentUser, pfp }) {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [likeCount, setLikeCount] = useState(post.likes.length);\n  const [commentCount, setCommentCount] = useState(\n    getCommentCount(post.comments)\n  );\n  const [commentsVisible, setCommentsVisible] = useState(true);\n  const [editingPost, setPostEditStatus] = useState(false);\n  const [postText, setPostText] = useState(post.text);\n  const [img, setImg] = useState(null);\n  const isAuthor = post.author._id === currentUser;\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    (async function getImg() {\n      if (post.photo) {\n        const key = post.photo.key;\n        setImg(`https://frozen-thicket-71687.herokuapp.com/images/${key}`);\n      } else {\n        return;\n      }\n    })();\n  }, [img, post.photo]);\n\n  const toggleModalVisibility = () => setModalVisible(!modalVisible);\n  const togglePostEdit = () => setPostEditStatus(!editingPost);\n\n  const EditComponent = () => {\n    return (\n      <EditForm\n        setPostText={setPostText}\n        postText={postText}\n        togglePostEdit={togglePostEdit}\n        postId={post._id}\n        isPost\n      />\n    );\n  };\n\n  const postContent = () => <p className=\"content\">{postText}</p>;\n\n  const postPhoto = () => (\n    <div className=\"photo-wrap\">\n      <img src={img} alt=\"post\" loading=\"lazy\" />\n    </div>\n  );\n\n  return (\n    <StyledPost className=\"postItem\" cmtsVis={commentsVisible}>\n      <div className=\"post\">\n        <div className=\"user-info\">\n          <div className=\"pfp-link\">\n            <Link to={`/user/${post.author._id}`} className=\"user\">\n              <ProfilePicture src={post.author.profilePhotoSrc} size={\"40px\"} />\n            </Link>\n          </div>\n          <Link to={`/user/${post.author._id}`} className=\"user\">\n            {post.author.firstName} {post.author.lastName}\n          </Link>\n          <p>{moment(post.createdAt).fromNow()}</p>\n        </div>\n        {editingPost ? EditComponent() : postContent()}\n        {post.photo ? postPhoto() : <div />}\n        <PostMetrics\n          likeCount={likeCount}\n          commentCount={commentCount}\n          toggleComments={() => setCommentsVisible(!commentsVisible)}\n        />\n        {isAuthor ? (\n          <BsThreeDots\n            className=\"post-settings\"\n            onClick={toggleModalVisibility}\n          />\n        ) : (\n          <div />\n        )}\n        <Settings\n          modalVisible={modalVisible}\n          toggleModal={setModalVisible}\n          postItem={post}\n          user={currentUser}\n          setFeed={setFeed}\n          homeFeed={homeFeed}\n          setCommentCount={setCommentCount}\n          togglePostEdit={togglePostEdit}\n          postAuthor={post.author._id}\n          isPost\n        />\n      </div>\n      <PostUtils\n        user={currentUser}\n        post={post._id}\n        setLikeCount={setLikeCount}\n        focusRef={() => inputRef.current.focus()}\n      />\n      <div className=\"comments\">\n        {post.comments.map((comment) => (\n          <div key={comment._id}>\n            <Comment\n              comment={comment}\n              currentUser={currentUser}\n              setFeed={setFeed}\n              homeFeed={homeFeed}\n              postAuthor={post.author._id}\n              setCommentCount={setCommentCount}\n              pfp={pfp}\n            />\n          </div>\n        ))}\n      </div>\n      <CommentForm\n        currentUser={currentUser}\n        postId={post._id}\n        postAuthor={post.author._id}\n        setFeed={setFeed}\n        homeFeed={homeFeed}\n        inputRef={inputRef}\n        setCommentCount={setCommentCount}\n        setCommentsVisible={() => setCommentsVisible(true)}\n        src={src}\n        pfp={pfp}\n      />\n    </StyledPost>\n  );\n}\n\nexport default Post;\n","import Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport styled from \"styled-components\";\n\nconst StyledLoader = styled.div`\n  background: #777;\n  width: 95%;\n  max-width: 750px;\n  padding: 18px;\n  border-radius: 8px;\n  margin-bottom: 10px;\n  box-shadow: 0 0.1px 0.8px rgba(0, 0, 0, 0.02),\n    0 0.1px 1.9px rgba(0, 0, 0, 0.028), 0 0.3px 3.5px rgba(0, 0, 0, 0.035),\n    0 0.4px 6.3px rgba(0, 0, 0, 0.042), 0 0.8px 11.7px rgba(0, 0, 0, 0.05);\n\n  .post-detail {\n    display: flex;\n    margin-bottom: 15px;\n  }\n\n  .detail-right {\n    margin-left: 10px;\n    width: 100%;\n    display: grid;\n    align-content: space-between;\n  }\n  .author {\n    width: 200px;\n  }\n  .posted-at {\n    width: 100px;\n  }\n\n  .text {\n    margin-bottom: 8px;\n  }\n  .post-body {\n    height: 200px;\n  }\n  .comments {\n    margin-top: 15px;\n  }\n  .comment {\n    margin-top: 12px;\n    display: grid;\n    grid-auto-flow: column;\n    justify-content: start;\n    gap: 10px;\n  }\n`;\n\nfunction PostLoader() {\n  return (\n    <StyledLoader className=\"loading\" id=\"post-loader\">\n      <SkeletonTheme color={\"#d8d8d8\"} highlightColor={\"#f0f0f0\"}>\n        <div className=\"post-detail\">\n          <Skeleton circle=\"true\" height={40} width={40} className=\"pfp\" />\n          <div className=\"detail-right\">\n            <Skeleton className=\"author\" />\n            <Skeleton className=\"posted-at\" />\n          </div>\n        </div>\n        <Skeleton className=\"text\" count={3} />\n        <div className=\"comments\">\n          <div className=\"comment\">\n            <Skeleton circle={true} height={35} width={35} />\n            <div className=\"cmts-right\">\n              <Skeleton height={55} width={200} />\n            </div>\n          </div>\n          <div className=\"comment\">\n            <Skeleton circle={true} height={35} width={35} />\n            <div className=\"cmts-right\">\n              <Skeleton height={55} width={260} />\n            </div>\n          </div>\n          <div className=\"comment\">\n            <Skeleton circle={true} height={35} width={35} />\n            <div className=\"cmts-right\">\n              <Skeleton height={55} width={150} />\n            </div>\n          </div>\n        </div>\n      </SkeletonTheme>\n    </StyledLoader>\n  );\n}\n\nexport default PostLoader;\n","import Post from \"./../post/post\";\nimport styled from \"styled-components\";\nimport PostLoader from \"../loader/postLoader\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useState } from \"react\";\n\nconst StyledFeed = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  .wrap {\n    width: 95%;\n    max-width: 750px;\n  }\n`;\nconst loader = (\n  <>\n    <PostLoader />\n    <PostLoader />\n    <PostLoader />\n  </>\n);\n\nfunction Feed({ homeFeed, posts, setPosts, src, currentUser, pfp }) {\n  const [visibilePosts, setVisiblePosts] = useState(5);\n\n  const addPosts = () => setVisiblePosts(visibilePosts + 5);\n\n  return (\n    <div className=\"grid-feed\">\n      <InfiniteScroll\n        dataLength={visibilePosts}\n        next={addPosts}\n        hasMore={posts?.length !== visibilePosts}\n      >\n        <StyledFeed className=\"grid-feed\">\n          {posts ? (\n            <div className=\"wrap\">\n              {posts.slice(0, visibilePosts).map((post) => (\n                <div key={post._id} className=\"post-wrap\">\n                  <Post\n                    post={post}\n                    setFeed={setPosts}\n                    homeFeed={homeFeed}\n                    src={src}\n                    currentUser={currentUser}\n                    pfp={pfp}\n                  />\n                </div>\n              ))}\n            </div>\n          ) : (\n            loader\n          )}\n        </StyledFeed>\n      </InfiniteScroll>\n    </div>\n  );\n}\n\nexport default Feed;\n","import { AiFillPicture } from \"react-icons/ai\";\nimport { MdTextsms } from \"react-icons/md\";\n\nfunction PostIcons({ toggleImgModal, focusRef }) {\n  return (\n    <div className=\"post-types\">\n      <div className=\"post-icon\" onClick={toggleImgModal}>\n        <AiFillPicture />\n        <p id=\"post-icon-text\">Photo</p>\n      </div>\n      <div className=\"post-icon\" onClick={focusRef}>\n        <MdTextsms />\n        <p id=\"post-icon-text\">Text</p>\n      </div>\n    </div>\n  );\n}\n\nexport default PostIcons;\n","import ProfilePicture from \"./../../userProfile/profilePicture\";\n\nfunction Form(props) {\n  const {\n    handleSubmit,\n    src,\n    currentUser,\n    handleInputChange,\n    text,\n    postRef,\n  } = props;\n\n  return (\n    <form onSubmit={handleSubmit} className=\"txt-form\">\n      <div className=\"wrap\">\n        <div className=\"pfp\">\n          <ProfilePicture src={src} userId={currentUser} size={\"37px\"} />\n        </div>\n        <input\n          type=\"text\"\n          onChange={handleInputChange}\n          value={text}\n          ref={postRef}\n        />\n        <div className=\"placeholder\" id={text ? \"moved\" : \" \"}>\n          What's on your mind?\n        </div>\n      </div>\n      <p>Press enter to post</p>\n    </form>\n  );\n}\n\nexport default Form;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport PostIcons from \"./postIcons\";\nimport ImageHandlerModal from \"./../../imageHandler/imageHandlerModal\";\nimport Form from \"./form\";\nimport Cookies from \"universal-cookie\";\n\nconst StyledStatusForm = styled.div`\n  background: ${({ lm, g }) => (lm ? \"#eee\" : g)};\n  border: 1px solid ${({ lm, g, w }) => (lm ? g : w)}11;\n  padding: 18px;\n  padding-bottom: 6px;\n  border-radius: 8px;\n  margin: 10px auto;\n  position: relative;\n  width: 95%;\n  max-width: 750px;\n  box-shadow: 0 0.1px 0.8px rgba(0, 0, 0, 0.02),\n    0 0.1px 1.9px rgba(0, 0, 0, 0.028), 0 0.3px 3.5px rgba(0, 0, 0, 0.035),\n    0 0.4px 6.3px rgba(0, 0, 0, 0.042), 0 0.8px 11.7px rgba(0, 0, 0, 0.05);\n\n  form {\n    display: flex;\n    flex-flow: column nowrap;\n  }\n\n  .wrap {\n    display: flex;\n  }\n\n  .pfp {\n    margin-right: 10px;\n  }\n\n  input[type=\"text\"] {\n    background: ${({ lm }) => (lm ? \"#d8d8d8\" : \"#707070\")};\n    padding-left: 10px;\n    border-style: none;\n    border-radius: 18px;\n    height: 37px;\n    width: 100%;\n    opacity: 60%;\n    font-size: 15px;\n    color: ${({ lm }) => (lm ? \"#000\" : \"#fff\")};\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  .txt-form {\n    padding-bottom: 10px;\n    border-bottom: 1px solid gray;\n    border-bottom: 1px solid gray;\n  }\n\n  .placeholder {\n    color: ${({ lm, g, w }) => (lm ? g : w)};\n    position: absolute;\n    top: 28px;\n    left: 75px;\n    font-size: 15px;\n    transition: top 0.2s ease, left 0.2s ease, font-size 0.2s ease;\n    pointer-events: none;\n  }\n\n  input[type=\"text\"]:focus + div.placeholder {\n    color: ${({ lm, g, w }) => (lm ? g : w)};\n    font-size: 12px;\n    top: 2px;\n    left: 70px;\n    transition: top 0.2s ease, left 0.2s ease, font-size 0.2s ease;\n  }\n\n  #moved {\n    top: 2px;\n    left: 70px;\n    color: ${({ lm, g, w }) => (lm ? g : w)};\n    font-size: 12px;\n    transition: top 0.2s ease, left 0.2s ease, font-size 0.2s ease;\n  }\n\n  p {\n    font-size: 12px;\n    padding-top: 3px;\n    padding-left: 57px;\n  }\n\n  .post-types {\n    display: grid;\n    grid-auto-flow: column;\n    margin-top: 7px;\n  }\n\n  .post-icon {\n    display: grid;\n    grid-auto-flow: column;\n    justify-content: center;\n    font-size: 28px;\n    cursor: pointer;\n    padding: 5px 0;\n    border-radius: 8px;\n\n    &:hover,\n    &:active {\n      background: #707070aa;\n    }\n\n    p {\n      padding: 0;\n      padding-left: 5px;\n      width: fit-content;\n      justify-self: start;\n      align-self: center;\n      font-size: 15px;\n      font-weight: bold;\n    }\n  }\n`;\nconst cookies = new Cookies();\n\nfunction StatusForm({\n  colors,\n  postRef,\n  currentUser,\n  lightMode,\n  setFeed,\n  homeFeed,\n  src,\n  fromProfile,\n}) {\n  const [text, setText] = useState(\"\");\n  const [modalVis, setImgModalVis] = useState(false);\n  const { black, gray, white, red, yellow } = colors;\n  const token = cookies.get(\"token\");\n\n  const focusRef = () => postRef.current.focus();\n\n  const toggleImgModal = () => setImgModalVis(!modalVis);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    // Prevent posting empty content\n    if (!text) return;\n\n    const formData = { homeFeed, text };\n    const reqBody = JSON.stringify(formData);\n\n    // Response returns the updated posts from the create method of the post controller.\n    // This is to help minimize requests.\n    const res = await fetch(\n      `https://frozen-thicket-71687.herokuapp.com/posts/new`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: reqBody,\n      }\n    );\n\n    const data = await res.json();\n    setFeed(data);\n\n    setText(\"\");\n    postRef.current.blur();\n  }\n\n  const textIsEmpty = () => text === \"\";\n\n  const handleInputChange = (e) => {\n    setText(e.target.value);\n  };\n\n  return (\n    <>\n      <StyledStatusForm\n        r={red}\n        y={yellow}\n        b={black}\n        g={gray}\n        w={white}\n        lm={lightMode}\n        textIsEmpty={textIsEmpty()}\n        className=\"grid-status-form\"\n      >\n        <Form\n          handleSubmit={handleSubmit}\n          src={src}\n          currentUser={currentUser}\n          handleInputChange={handleInputChange}\n          text={text}\n          postRef={postRef}\n        />\n        <PostIcons toggleImgModal={toggleImgModal} focusRef={focusRef} />\n        <ImageHandlerModal\n          toggle={toggleImgModal}\n          user={currentUser}\n          vis={modalVis}\n          setFeed={setFeed}\n          postInput\n          fromProfile={fromProfile}\n        />\n      </StyledStatusForm>\n    </>\n  );\n}\n\nexport default StatusForm;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { AiFillPicture } from \"react-icons/ai\";\nimport colors from \"./../../colors\";\nimport Cookies from \"universal-cookie\";\nimport Spinner from \"./../spinner/spinner\";\nimport compressImage from \"./../../utils/compressImage\";\n\nconst StyledHandler = styled.form`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n  z-index: 10;\n  width: 100%;\n  max-width: 400px;\n  max-height: 90vh;\n  padding-bottom: 15px;\n  border-radius: 8px;\n  box-shadow: 0 0.1px 0.8px rgba(0, 0, 0, 0.02),\n    0 0.1px 1.9px rgba(0, 0, 0, 0.028), 0 0.3px 3.5px rgba(0, 0, 0, 0.035),\n    0 0.4px 6.3px rgba(0, 0, 0, 0.042), 0 0.8px 11.7px rgba(0, 0, 0, 0.05);\n\n  input[type=\"file\"] {\n    display: none;\n  }\n\n  .icon {\n    font-size: 100px;\n    cursor: pointer;\n    color: ${colors.blue};\n    justify-self: center;\n  }\n\n  label {\n    height: fit-content;\n    width: fit-content;\n    display: grid;\n    flex-direction: column;\n    grid-auto-flow: row;\n    justify-content: center;\n    margin-bottom: 10px;\n\n    p.upload-txt {\n      padding: 0;\n      text-align: center;\n      font-size: 14px;\n\n      &:hover {\n        text-decoration: underline;\n        cursor: pointer;\n      }\n    }\n  }\n\n  input[type=\"submit\"] {\n    margin-top: 20px;\n    width: 95%;\n    max-width: 400px;\n    font-size: 18px;\n    padding: 10px;\n\n    &:hover,\n    &:active {\n      background: ${colors.blue};\n      cursor: pointer;\n    }\n  }\n\n  img[src] {\n    margin-top: 15px;\n    max-width: 95%;\n    max-height: 300px;\n  }\n\n  #esc {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    height: 40px;\n    width: 40px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n\n    &:hover,\n    &:active {\n      opacity: 80%;\n    }\n\n    span {\n      display: block;\n      height: 2px;\n      width: 25px;\n      background: ${colors.gray};\n      border-radius: 8px;\n\n      &:first-child {\n        transform: rotate(45deg);\n        position: absolute;\n        left: 8px;\n      }\n\n      &:last-child {\n        transform: rotate(-45deg);\n        position: absolute;\n        left: 8px;\n      }\n    }\n  }\n\n  input#img-text-input {\n    width: 95%;\n    min-height: 35px;\n    max-width: 400px;\n    font-size: 14px;\n\n    &:hover {\n      opacity: 70%;\n    }\n  }\n\n  .img-error {\n    display: ${({ imgError }) => (imgError ? \"flex\" : \"none\")};\n    padding: 5px;\n    padding-top: 20px;\n    font-size: 14px;\n    text-align: center;\n  }\n\n  .spinner {\n    position: absolute;\n    bottom: 26px;\n    left: ${({ pfp }) => (pfp ? \"10%\" : \"33%\")};\n  }\n\n  @media (min-width: 420px) {\n    .spinner {\n      left: ${({ pfp }) => (pfp ? \"16%\" : \"36%\")};\n    }\n  }\n  @media (min-width: 520px) {\n    .spinner {\n      left: ${({ pfp }) => (pfp ? \"20%\" : \"150px\")};\n    }\n  }\n`;\nconst cookies = new Cookies();\n\nfunction ImageHandler({\n  user,\n  toggleOff,\n  profile,\n  setFeed,\n  setUpdateStatus,\n  postInput,\n  fromProfile,\n}) {\n  const [imgFile, setImage] = useState(null);\n  const [src, setSrc] = useState(null);\n  const [text, setText] = useState(\"\");\n  const [spinnerVis, setSpinnerVis] = useState(false);\n  const [imgError, setImgError] = useState(false);\n  const token = cookies.get(\"token\");\n\n  const handleImgInput = (e) => {\n    setImage(e.target.files[0]);\n    setSrc(URL.createObjectURL(e.target.files[0]));\n\n    if (imgError) {\n      setImgError(false);\n    }\n\n    if (e.target.files[0].size > 6000000) {\n      setImgError(true);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!imgFile || imgError) return;\n\n    setSpinnerVis(true);\n\n    const compressedImg = await compressImage(imgFile);\n\n    const formData = new FormData();\n    formData.append(\"file\", compressedImg);\n    formData.append(\"text\", text);\n\n    const endPoint = `${profile ? \"profile\" : \"posts\"}/${\n      fromProfile ? \"profile\" : \"home\"\n    }/${user}`;\n    const url = `https://frozen-thicket-71687.herokuapp.com/upload/${endPoint}`;\n\n    await fetch(url, {\n      method: \"post\",\n      body: formData,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(async (res) => {\n        const data = await res.json();\n        if (profile) setUpdateStatus(true);\n        else setFeed(data);\n\n        clearHandler();\n        setSpinnerVis(false);\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const clearHandler = () => {\n    toggleOff();\n    setImage(null);\n    setSrc(null);\n    setText(\"\");\n    setImgError(false);\n    setSpinnerVis(false);\n  };\n\n  const handleInputChange = (e) => setText(e.target.value);\n\n  return (\n    <StyledHandler\n      id=\"img-form\"\n      onSubmit={handleSubmit}\n      encType=\"multipart/form-data\"\n      className=\"modal-component\"\n      pfp={profile}\n      imgError={imgError}\n    >\n      <input\n        type=\"file\"\n        name={postInput ? \"post-file\" : \"file\"}\n        id={postInput ? \"post-file\" : \"file\"}\n        accept=\".png, .jpeg, .jpg\"\n        onChange={handleImgInput}\n        className=\"modal-component\"\n      />\n      <label\n        htmlFor={postInput ? \"post-file\" : \"file\"}\n        className=\"modal-component\"\n      >\n        <AiFillPicture className=\"upload-icon icon modal-component\" />\n        <p className=\"upload-txt modal-component\">Upload an image</p>\n      </label>\n      {profile ? (\n        <div />\n      ) : (\n        <input\n          type=\"text\"\n          id=\"img-text-input\"\n          placeholder=\"What's on your mind?\"\n          onChange={handleInputChange}\n          value={text}\n          className=\"modal-component\"\n        />\n      )}\n      <img src={src} alt=\"\" className=\"modal-component\" />\n      <p className=\"img-error\">\n        This image is too large! If you really want to post it, please compress\n        it.\n      </p>\n      <input\n        type=\"submit\"\n        value={profile ? \"Change profile picture\" : \"Post\"}\n        className=\"modal-component\"\n        disabled={spinnerVis}\n      />\n      <Spinner className=\"spinner\" vis={spinnerVis} />\n      <button id=\"esc\" onClick={clearHandler} className=\"modal-component\">\n        <span />\n        <span />\n      </button>\n    </StyledHandler>\n  );\n}\n\nexport default ImageHandler;\n","import { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ImageHandler from \"./imageHandler\";\n\nconst StyledModal = styled.div`\n  display: ${({ vis }) => (vis ? \"flex\" : \"none\")};\n  justify-content: center;\n  position: fixed;\n  top: 20px;\n  left: 0;\n  width: 80%;\n  margin: 0 10%;\n  z-index: 3;\n  animation: comeFromTop 0.2s cubic-bezier(0.18, 0.89, 0.32, 1.28);\n\n  @keyframes comeFromTop {\n    from {\n      top: -50px;\n    }\n  }\n`;\n\nfunction ImageHandlerModal({\n  toggle,\n  user,\n  vis,\n  profile,\n  setFeed,\n  setUpdateStatus,\n  postInput,\n  fromProfile,\n}) {\n  const toggleModalOff = (e) => {\n    if (e.target.tagName === \"path\") return;\n    if ([...e.target.classList].includes(\"modal-component\")) return;\n    if (vis) toggle();\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"click\", toggleModalOff);\n\n    return () => {\n      window.removeEventListener(\"click\", toggleModalOff);\n    };\n  });\n\n  return (\n    <StyledModal vis={vis}>\n      <ImageHandler\n        user={user}\n        toggleOff={toggle}\n        profile={profile}\n        setFeed={setFeed}\n        setUpdateStatus={setUpdateStatus}\n        postInput={postInput}\n        fromProfile={fromProfile}\n      />\n    </StyledModal>\n  );\n}\n\nexport default ImageHandlerModal;\n"],"sourceRoot":""}